script_name('LawGuard')
script_author('GORYCH')
script_version('2.0')

local imgui = require 'mimgui'
local ffi = require 'ffi'
local vkeys = require 'vkeys'
local icons = require 'nerdicons'
local encoding = require 'encoding'

local cyr = encoding.CP1251
encoding.default = 'UTF-8'

local wm = require 'windows.message'
local new = imgui.new

local renderWindow, freezePlayer = new.bool(), new.bool()
local enabled
local resX, resY = getScreenResolution()

local friskImage1Base85 = '\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x00\x00\x01\x4D\x00\x00\x00\x5A\x08\x03\x00\x00\x00\x0B\x8A\xF4\x61\x00\x00\x01\xB0\x50\x4C\x54\x45\x00\x00\x00\x00\x00\x00\xFF\x55\x55\xFF\xFF\xFF\xA1\x55\xE8\xAD\x61\xF4\x97\x50\xDA\x61\x33\x8C\x09\x1D\x1D\x42\x23\x5F\x89\x48\xC5\x34\xA2\xA2\x05\x0E\x0E\x17\x47\x47\xF8\xF8\xF8\x36\xA2\xA2\x3F\xC3\xC3\x1C\x55\x55\x83\x45\xBD\x9D\x53\xE2\x4E\x29\x71\xF8\x53\x53\x7E\x42\xB5\xD9\xD9\xD9\x68\x68\x68\x20\x64\x64\x9A\x9A\x9A\x7C\x7C\x7C\xD0\xD0\xD0\x18\x47\x47\xD9\x48\x48\x9A\x33\x33\x39\xB2\xB2\xF0\xF0\xF0\x1B\x55\x55\xAE\x62\xF5\x7C\x29\x29\xA5\x59\xED\x68\x23\x23\xC7\xC7\xC7\x8C\x2F\x2F\xF0\x50\x50\xD0\x45\x45\x41\xC3\xC3\x12\x38\x38\x8C\x8C\x8C\xA9\x5D\xF1\xE1\xE1\xE1\xC7\x42\x42\xE9\xE9\xE9\x31\x99\x99\xBD\xBD\xBD\x0E\x2A\x2A\x99\x4D\xE0\xE1\x4B\x4B\x9D\x51\xE4\xE9\x4E\x4E\xB2\x3B\x3B\xA2\x56\xE9\x94\x48\xDB\x8A\x3E\xD1\xB2\xB2\xB2\x93\x4E\xD4\x4F\x08\x96\x8E\x4B\xCD\x5D\x11\xA4\x2C\x87\x87\x8F\x43\xD7\x77\x2B\xBE\xA7\xA7\xA7\x32\xA2\xA2\xA7\x38\x38\x07\x17\x17\x02\x07\x07\x84\x38\xCB\x2F\x92\x92\x58\x2F\x7F\x27\x76\x76\x70\x3B\xA2\x24\x3E\x58\x70\x24\xB7\x2C\x82\x84\x41\x47\x61\x38\x54\x4E\x27\x04\x4C\x13\x01\x27\x8C\x45\xD2\x87\x41\xCD\x76\x41\xAB\x69\x38\x98\x18\x49\x49\x81\x41\xC4\x7C\x33\xC2\x5C\x42\x96\x47\x06\x89\x43\x16\x83\x54\x3D\x82\x25\x73\x73\x45\x2D\x71\x1D\x48\x24\x1B\x63\x1B\xB3\x67\xFA\x91\x4A\xD7\x88\x48\xCA\x68\x38\xA3\x3D\x03\x78\x4A\x45\x6F\x21\x66\x66\x42\x55\x5F\x31\x01\x5D\x1D\x43\x50\xBD\x3F\x3F\x16\x01\x2C\x0D\x26\x26\x0F\x01\x1D\x14\x51\x12\x3C\xC3\xC3\x37\xAB\xAB\x4E\x4A\x81\x39\x53\x7E\x28\x28\x59\x2B\x55\x38\x25\x41\x36\x0D\x2A\x2A\x03\x08\x08\x9F\x59\xE4\x97\x57\xDA\x68\x1C\xAF\x66\x2D\xA3\x59\x1E\x9B\x57\x3A\x87\x41\x03\x7F\x36\x30\x70\x31\x4A\x46\x19\x01\x31\x7D\x5A\xB5\x4B\x93\xB1\x32\x90\x94\x3C\x64\x88\x36\x0B\x6C\x2C\x38\x63\x33\x36\x50\x1D\x01\x39\x0F\x19\x26\x75\x86\xB8\x09\x00\x00\x00\x01\x74\x52\x4E\x53\x00\x40\xE6\xD8\x66\x00\x00\x0D\xFC\x49\x44\x41\x54\x78\xDA\xEC\x9A\x07\x8F\xD3\x40\x10\x85\xFD\x70\x36\x24\xA4\x10\xEA\x5D\x8A\x20\x85\x10\x21\x41\x20\x40\x14\x38\x8E\x72\x34\xD1\x7B\xEF\xBD\x83\xE8\xBD\xF7\xCE\x5F\x66\x66\x77\xED\xB1\x4D\x11\x22\x81\x80\xE0\x21\xEC\x2D\x33\x6B\xEF\x97\xD9\x62\xFB\x9C\x3E\x0B\xA4\xEF\x5B\xCC\x84\xD5\xDC\x1F\x6B\xEC\x1F\x16\x10\x8B\x01\xDF\xB7\x48\x8E\x8F\xC7\x62\xF1\xF1\x49\xCC\xFD\x81\xC6\xFE\x69\x9C\x21\x00\xF9\x34\x90\xB9\xEE\x24\x38\x7F\x0F\x09\xAE\x4E\x00\x93\x63\x46\x13\x26\x22\x07\x18\x27\x31\xA6\xCC\xFA\x34\xEE\x39\xCE\xEA\x04\xFE\xD3\x0C\x00\x80\xC8\x91\xE3\xDE\x58\x6C\x4F\x12\x18\x3D\x21\x16\x07\xCB\xD8\x79\xC6\xD7\x61\x74\xAF\x0A\xFC\x19\x34\x53\x09\xA4\xAB\x29\xC7\xC9\x38\xAB\xFD\x54\xEA\x5B\xA9\xD5\x91\x54\x17\x1E\x11\x9A\xC0\xE4\x09\xB1\xD8\x98\x89\x88\xC7\x88\xDE\x12\x86\x97\xA4\xC3\x98\xD8\x1E\xB0\x36\x2C\xDB\x60\x8C\xCD\xD1\x1A\x73\x66\xEF\x84\xD8\x12\xC2\x1D\x8F\xC5\x37\x70\xCD\x37\xBA\xF4\xFD\xB2\xDE\x40\xE0\x2B\xA3\x3F\xCA\x84\x69\x56\x31\x3E\xC6\x5A\x46\xE7\xBD\x48\x52\x2A\x49\x71\x39\x1E\x13\xE8\x7C\xC3\x86\xA2\xD0\xF4\x8D\x61\xCF\x04\x52\x0B\xE8\x6B\x97\x52\xFC\xAB\x4E\x18\x3F\x1A\xC9\x31\xBF\x39\x95\x09\xD1\x4C\x13\xB7\xD1\x98\x48\x59\x66\xB8\x89\xC0\x6C\x62\xAE\xA6\x1E\x51\x9A\xBE\x31\x28\x42\x81\x24\xC6\x90\x13\xD9\xB3\x71\x1F\xBB\xC4\xFD\xF1\xF4\x9B\x53\x88\x8E\x74\x8C\x9E\xBC\x44\x03\x8A\x63\x59\x6C\x19\x0D\xDF\x78\x4C\x00\x92\x82\x34\xC5\x38\x36\xD1\x94\x25\x09\xAA\x6E\xAC\x8F\x5D\x72\x32\x18\x93\xC4\xC4\xC9\x34\xEB\x8C\xFE\xCD\xA9\x54\x88\x66\x8A\x17\x1A\x16\xCF\x99\x14\x75\x1B\x08\x13\x01\x45\x5C\xD3\x8A\xD2\x14\x63\xED\x1F\xAC\x71\xFA\xD8\x25\xBE\x76\x7F\x94\x92\x79\x93\x95\x20\x6E\x93\x37\xE9\xE8\x9A\xAC\x03\x73\x09\x1D\x27\xC3\x5F\x85\xE0\xD3\x64\x1B\x31\xE6\xFF\x3C\x4D\x48\x6C\xF6\xB5\x4B\xBC\x14\xE5\xF2\x09\x24\x52\xBF\x39\x15\xA6\x69\xC6\xEC\x26\x1D\x77\x3C\x69\x72\x92\xE6\x46\x6C\x30\x3B\xA4\x0D\x93\xB9\x86\xD2\x34\x3D\x51\x4A\x8C\x35\xC0\x4C\x70\xDE\xEC\x63\x97\xFA\x2C\x40\xA6\xD1\x65\x7C\xD2\x31\xA6\x17\xF4\xA4\x2E\x5C\xE3\xEF\xDE\x4D\xA0\xB2\x49\xD0\xD8\xD0\x2C\xDB\x35\xFD\x0F\xD8\x6F\xF6\x4B\x51\x9A\x18\x43\x4B\xE3\x44\x8E\x31\x1E\xE8\xE0\xA1\x8E\x99\x64\xB1\x81\x9F\x2C\x97\x4C\x4E\x62\x26\x30\x9E\x37\x99\x21\x63\x03\xB0\xCA\x0B\xEB\x92\xD1\xFF\x38\x4D\x07\xBE\xFC\x64\x75\xA6\x9F\x9D\x49\x16\x6B\x40\xB2\x99\x80\xB1\xC8\x6E\x57\xB5\xFE\x6D\x98\x02\x48\x2F\x1E\xE9\x6A\x0E\x55\x7E\x6D\x34\x9F\xB2\xF3\x89\x1F\xAB\x5C\x4D\x00\xF3\xF3\x8E\x85\x96\xC9\x85\x8C\x01\xFF\x89\x6E\x7E\xEA\x5F\x87\xF9\x5F\xFF\xF5\x5F\xFF\xF5\x77\x2A\x95\x01\x90\x49\x99\x4C\x3E\x01\x52\xDA\xF9\x2D\x1A\xF7\x09\x48\x8C\xB3\x77\xF1\x1E\xC0\xE6\x54\x60\x6D\x9A\x7F\xD4\xC1\x65\x53\xF9\x12\x39\xB2\x38\x0C\x5C\xD6\xD6\xF2\x52\xD4\xB1\x2A\xE3\x10\x1D\x8F\x5E\xC4\xC5\xA3\xC1\xB5\x6D\x29\xCA\x4E\x44\x1F\xA1\xAF\x76\x08\xD8\x41\xA6\xC1\x76\x24\xD3\x85\xD6\xC2\x68\xAD\x74\xE4\xF7\xE0\xBC\x1D\xFC\xE6\xB3\x13\x46\x57\xCD\x3D\x88\xBC\xBB\xCA\xED\xF4\xAD\x83\xC5\x1E\x4C\x10\x4E\x44\xB5\x14\x08\xE2\x14\x9F\xB3\x30\x92\xB2\x1E\x7D\x5E\x02\x0A\x03\xAE\xEB\x0E\x14\x00\xCE\x34\x2A\x2E\x29\xFB\x1B\x70\x02\x23\xA7\xEA\x4A\xD5\x4F\x8D\x68\x40\x2B\xDB\x4A\xA9\xF6\x19\x90\x94\x56\x6D\x68\x18\xAA\x69\xEE\xAA\xA9\xEE\x00\x17\x26\x28\xD5\x7C\x75\x4D\x1B\x70\xB1\x39\x1B\x98\x5B\x54\x07\xC0\x70\xBD\x56\x1F\x06\x6A\xE4\xAC\xE8\x00\x74\xD4\x91\x10\xCE\x32\x37\x05\x9C\xC5\x99\x21\xA5\xD8\xD4\xDC\x88\xEB\x9A\x94\x64\x7E\x52\x6B\xD0\x70\x8D\x1A\x58\x03\x10\x4B\x86\xB9\x0A\xEB\x81\x50\xE8\xA7\xE6\x23\x9D\xB7\x99\xDC\x7C\x20\x58\xC5\x47\x7F\x5F\x9D\xF2\x9E\x59\x73\x19\xDE\x1E\x86\x5C\xF2\x69\x2E\xF2\x5C\x4F\x2B\xA3\xE6\x09\x00\xBB\x6C\x66\x17\xC3\xF2\xB4\x7B\xB7\x5A\x84\x9D\x3B\xB1\x48\xED\x27\x73\xB1\x8E\xD2\xDC\x89\x4E\x6D\x25\x30\x54\x63\x0D\x13\x4D\x23\xE0\x0C\x41\xBE\x2A\x9D\x3D\x09\xB4\xB9\x18\xFB\x8D\xC1\x0A\xE4\x7D\x80\xC8\xE8\x7D\x6C\x57\x34\xCB\x98\xE5\xBA\xF3\x00\xCC\x73\xDD\x59\x7C\x6C\x15\xC0\x5A\x1F\x19\x07\xE3\x7C\x5A\x40\x2E\x34\x02\x09\xE6\x97\xA2\xD9\x6D\xAE\x8C\x4B\xED\x22\xD2\x38\xDF\xE0\x20\xD1\xBA\x0B\xDC\x6C\xAA\x3A\x28\xB6\xD4\x30\x07\x57\x4D\x9D\xD3\x90\x58\x8B\xA8\xA2\x5E\x3B\x02\x6C\x63\x8B\xED\x8A\x91\x6E\x7F\xA0\x1E\x7C\x49\x13\x23\x35\xB2\x38\xA0\x3A\x23\x58\x59\xEB\x40\xAB\xAE\x0E\xE8\xE3\x35\x04\x3A\xBB\x6D\x48\x43\xC6\x90\x5A\x04\x3C\xE6\xA4\xD0\x44\x86\x60\x76\x47\xB3\x8A\x12\xC1\x64\x2D\x76\x4B\xC0\x6C\xB7\x50\xA2\x51\x3F\xE8\x35\x2A\xD7\x2A\xB4\xDC\x6C\xC3\x16\x17\x5B\x7C\x94\x2A\x3E\xBA\x5A\x74\x2A\x54\xDC\x4A\x01\xE3\xE6\xA2\x38\x40\x2D\x15\x43\x2E\x8D\x2C\x17\x69\x9C\x23\x68\x6B\x7E\x04\xB2\xB3\x9D\xC8\xD9\xCC\x3A\x75\xCA\xA7\x89\x9A\xC2\x39\x55\x67\x24\x17\xD8\xA2\x0D\xD2\x9D\x87\x5B\xC4\xC0\xE2\xD8\x4A\x6E\x2B\x78\x58\x8F\xF8\xB3\x25\x76\x11\xFB\x8B\x37\xB1\x42\xAD\xC3\x56\xC7\x8A\x1D\x0E\x18\xDF\x11\x7D\xAD\x3A\x76\x78\x3D\x2C\xB8\x03\x00\x06\xDC\x42\x37\x34\x13\xA8\xB8\x83\x30\x4D\x56\x00\xEA\xAC\x99\x36\xE5\xF7\x32\xA9\x59\x2E\x6B\x9E\xCE\x90\x4B\x88\x66\x36\x44\x93\xC5\x61\x3E\x98\xD5\x2D\x0D\x06\x5C\x4A\xBA\x6E\x36\x66\xEA\xC1\xD9\x54\x77\xE5\x9B\x4F\x5D\x1D\x83\xE9\x6F\xDD\x83\x75\x7C\x91\x1A\x02\xE1\x18\x1E\x26\x54\x6C\x71\x10\x29\x67\x1D\x48\x51\x9A\x4F\xD0\x56\x2B\x81\x66\x73\xB8\xAE\x3A\xDB\x70\x8B\x83\x95\xDB\x71\xEA\x58\xA9\xDA\xD8\xEC\x58\x9D\xC5\xD0\x36\xE3\x03\x66\xAF\x9A\xC7\x90\xB3\x34\xB9\x17\xA0\x44\xB6\xAB\xD8\xF4\x9D\x01\xC3\xA4\x55\xC4\xAC\x96\x5B\x32\x59\x96\x49\x0D\x50\xD1\x2C\xC3\x1B\xAB\x28\x00\x03\x3E\xCC\xDF\x37\x77\xC9\x8E\xA8\x0D\xD8\x03\xBB\x89\x4B\x96\x0E\x45\xFF\x7A\xB6\x5B\x3E\x17\x29\x55\x56\xB5\x83\x4C\xB1\xD9\xAC\x07\x2C\x72\x4B\x4F\x8A\x81\x2D\xBB\x88\x3A\x87\x25\xAF\x3C\xA4\x6D\x38\x79\xCB\x8B\x49\x1C\x33\xF1\x67\xF5\x2C\xB0\x82\xD5\x89\xE6\x63\x94\xFD\x6E\x94\xDC\x55\x74\x9B\xA5\xDE\xD2\x2C\x02\x28\x9A\x9F\x88\x35\x00\xAF\xC2\x47\x3B\xD8\x72\x67\xB3\x8B\x0C\x11\x31\xE0\x6A\x60\x90\x33\x59\x93\xCA\x8A\x0B\xA9\xD0\x68\x09\xCD\x9A\xBF\x7E\x7F\x95\x66\x73\xC5\x71\x6C\xE4\xD5\x9A\xE2\xAE\xEE\x5B\x94\xC3\x34\xC5\x8B\x0F\x8B\x78\x42\xE8\xF0\x50\x6F\x12\x5E\xF9\xCD\x04\xA7\x2D\x58\x7A\x19\x00\xC7\xFE\x59\xAF\x1B\xDC\x0F\x1E\xE8\x5D\xD1\x4C\x23\x1B\x1E\xE9\x80\x07\xD6\xA8\x24\x34\xAB\x80\x29\xAE\x14\x91\xF3\x69\x66\xB3\x7C\x14\x4F\x63\x24\x29\xDF\xE5\x3C\x0A\x3C\xF8\xED\xCD\xEE\xE0\xC1\x2D\x34\x9B\xD1\x91\x7E\xA0\xC9\xE3\xDC\xE7\xF1\x12\x4D\x86\xEA\x9C\x0F\x8F\xF4\x5A\x98\xA6\x5F\xB7\xD2\x38\x47\x69\xDA\x02\xC6\x2D\xE1\x2E\x13\x16\xFF\xF6\x5D\xD1\xCC\x60\xC0\x5F\x85\x06\x80\x16\x07\x14\x8A\x16\xAC\x9E\x2E\xA3\xB1\xC9\x6A\x48\x6C\x9A\x79\x5B\x68\xDA\x88\x94\xD8\x14\x17\x54\xDC\xC6\xE2\x41\x7B\xB3\x9B\x11\x57\xC3\xD2\xA9\xB6\xDA\x6D\x57\xA1\x25\x3E\x10\xD5\x26\x4B\x8B\xEC\x30\x59\x2C\x02\xE9\x69\x47\x16\x7D\x84\x63\xB3\x23\x34\x57\x50\x73\x6F\xA5\xC6\xA3\x23\xA6\xCD\x6B\x5F\xD0\x2C\xB9\xF4\x0F\x36\x83\x9F\xDF\x21\x2D\xF6\x77\x48\x0D\xB7\x35\xC8\xEB\xEF\x3C\xA1\x29\xF3\x66\xC1\x42\x5E\x9C\xA5\xFA\x2B\xE6\x36\x08\x27\xC2\x34\x67\x47\xE6\x4D\x71\xD1\xF3\xC8\x62\x4B\xB3\x8C\x23\x66\x87\xB4\x9D\x76\x9A\x7A\x87\xC4\x0B\xCC\x7E\xD9\x21\xF1\x6E\xE9\x26\x52\x7A\x65\x07\x99\x9B\x3D\xD4\x53\x5A\x67\xBE\xD8\x21\x1D\xC2\x90\x7A\xC2\xBF\x44\xFB\x38\x71\x6C\x6B\xB0\x77\xCC\x94\x38\x42\x41\xEA\xC3\x91\x09\xA6\xCD\x56\x8B\xEC\x0A\x25\x7D\x75\x0B\x3E\x4D\xF4\x62\xF7\x6E\xC6\x62\xCB\x06\xA1\xC0\x0A\xAD\xE9\x05\x26\x5F\x36\xB7\x91\x45\x84\xA6\x6E\xA1\x08\x14\xBD\x35\x5D\x5C\x66\x73\x89\x99\x59\x78\xA8\x8F\x31\x4B\x8D\x52\x63\x00\xEC\x32\x49\x75\x1A\x16\x12\x08\x51\x13\xA4\x9A\x1E\xCE\xBC\x85\xD7\x6A\x6E\x13\x9A\x76\xA4\x8F\xE8\x35\x9D\x1D\x58\xDB\x01\x34\x0D\xE6\xD7\x38\xA3\xDA\x32\x76\x85\xE6\xA3\xA6\x6D\x2A\x27\x34\x51\xE1\xCE\x48\x6F\x7A\xF1\x64\x59\xCA\xBA\x95\x06\x3C\x9A\x12\xFA\x85\x8A\xEC\x37\xD1\x30\xDB\x1C\xCE\x15\xA2\x34\x8B\x15\xB7\x35\x0B\x1B\x97\x7B\xFB\x4D\x71\xE1\x50\xCD\x96\x8A\xD4\xA6\x7D\x75\xB1\xFD\x54\xBD\xA6\x86\x76\x1D\xC7\x52\xCA\x5C\x88\x53\xFF\xE2\x17\xE0\xD1\xCC\xE1\x44\x4D\xB5\x2D\x4D\x6D\x7E\x80\x37\x35\x8B\x8E\x43\x68\x86\xF6\x9B\xB7\xC0\xC0\x87\xB6\xE3\xA0\x5F\xB1\x12\xA7\xD5\x9E\xAF\xD0\x5C\x8E\x17\x6D\xA5\xDA\x2F\xB0\x5C\x56\xE2\x3C\x1A\x74\x67\x55\xE9\x4D\xEF\xDE\x7A\x44\x3F\xC2\x38\xD5\x60\x86\x3D\x66\x7A\xD6\x29\xDF\x54\x7E\x65\x6C\x74\x9C\xE5\xDE\xB3\x90\xB8\x04\x9E\x94\x4C\x74\x5A\x2D\xA5\xCC\xD5\xF0\x5B\x0F\xDE\x0B\x81\xF4\xDC\xE4\x58\xF8\xF6\x5B\x0F\x7C\xE0\xC5\xCB\x5A\x1C\x94\x0A\xF3\x2C\x04\x58\x36\xE2\xB3\x02\x5A\xCB\x83\x65\x79\x73\x67\xB0\xEA\xC9\x1B\xB9\x71\x69\x24\xF2\x9C\x90\x8E\x03\xF6\x0F\xCF\xF2\x5E\x26\x6F\x60\x72\x2E\x65\xCB\x82\xF3\xF9\xFC\xB2\x3C\xA7\x87\x5C\x32\x48\x8F\xCB\x19\x98\xAC\xF2\x38\x02\xFA\x2E\x6F\xEF\x62\x33\x80\x4B\x29\xC7\x3A\x18\x9C\xCF\x4D\xCE\x68\xFD\x6D\x90\xBF\x18\xC8\xF9\xB2\x7D\xBD\xF1\x08\x38\x54\x96\x8A\x32\x4E\xA8\x38\x2F\xB0\xB3\x71\x3B\xF2\xC2\x2D\x47\x57\xDB\x9C\x0B\x97\xE5\xE1\x37\xFE\x47\x7C\x62\x92\x21\xF2\x7B\xC5\x4B\x5A\x87\x42\x3C\xA2\xC3\x78\xA8\x4E\x10\x35\xFD\x30\xFB\x17\xAA\x5F\x5F\x61\xCB\x80\xC0\x0C\xE2\x04\x45\xEC\xA5\x4B\x7F\x27\xCC\xFE\x0D\x91\xB2\xC0\x0C\xE3\xE4\x81\x7F\xE9\x2F\x85\xF9\xAF\x0B\x69\x9B\x48\xA0\xDC\x83\xC8\xFC\xC5\x11\x0A\xDB\xF2\x1F\xFA\x67\x1D\xA1\xFD\x47\xB9\x17\x8D\xC9\xB9\xF7\x82\x6D\xF9\x0F\xFD\x2B\x19\xF3\x46\x4F\x27\x2A\xFC\x7C\xD3\x65\x63\xA3\x46\x01\x72\xEE\xB9\xB8\xE1\x51\xD3\x71\x03\xD3\xE9\xFC\x07\xE2\xCC\xA3\xC1\x4F\x94\xCE\x3E\xCC\x73\x4B\xB8\xDF\xD5\xA7\x9E\x28\x4D\x5B\xE3\xFB\x8B\x97\x34\x04\x2B\xB9\xAA\x18\x49\x51\x88\xE6\x42\xAC\xC5\x42\x3A\xCB\x15\x64\xBF\x2D\x17\x1A\x6B\x53\xD2\x88\xDC\xA9\xD8\x03\xBD\x5D\x3D\x81\x2C\xC5\xE4\x72\x0C\x66\xB3\x83\xDD\x7C\xEA\x89\xD2\x94\x1A\xF1\x97\xAC\xD7\x10\x44\xC1\xAB\xE6\xC2\x45\x61\x9A\x0B\x00\x2C\xA0\xF3\xD7\x6E\x51\x2E\xE4\xA5\xA4\x11\xFF\x4E\x11\x52\x4F\x77\x76\xEB\xB1\xCA\xAD\x00\xFA\xEB\xD0\x3E\xA7\x9B\x4F\x3D\x42\xD1\x9E\xE7\x4C\x1A\x35\x6A\xCA\x34\xCE\x4C\x9D\x31\x6A\xC6\x54\x5B\x3C\x6D\x81\x3E\x4E\xB1\x75\x56\xC6\x63\x2A\x1D\xC5\x48\x8A\x84\x26\x79\x71\x29\x1D\xE5\x0A\xD2\x08\xE4\x42\x92\x32\x8D\x88\xB5\x5C\x54\x66\x24\x49\x75\x29\x60\x36\x81\xD4\x1F\x29\x28\xD7\xC5\xA7\x9E\x28\xCD\xCF\xED\x9D\xDD\xAE\x93\x40\x14\x85\x59\xFB\xEA\x24\xB6\x62\x2F\x26\xD1\x8B\x82\x26\xA4\xA1\xC5\x8B\xC6\x98\xA6\x7D\x82\x9A\x78\xE5\x23\xF8\x04\xC6\x7B\x1F\xDE\xD9\xCC\xCF\x2A\x73\x3C\x26\xC7\xC1\x73\x40\x59\x89\x38\xCC\x6C\xF6\x86\x15\x18\x28\x5F\xB5\x07\x51\x9D\xE2\xCE\xB7\xAE\x7B\x6F\x9B\xD8\x19\xED\x31\xBB\xC4\x4D\xDB\xCB\x20\x76\x0D\xDC\xBC\xC8\x15\x57\xBB\x64\x05\x26\x69\x59\x88\x2D\x97\x84\xD1\xA9\x9B\xC0\x7A\xC4\x99\x5E\xB9\xC3\x6B\xCB\x2A\xF1\xA2\xC8\x46\x3D\x12\xA5\x87\x50\xA3\x71\xBB\x7C\xD0\x63\xA9\xB4\x65\x8D\x90\xDA\xAF\x55\xDA\xAF\x9D\x61\x59\xE9\x76\x0C\x72\x5D\xA9\x9B\x3B\xA9\x50\xD9\x25\x2B\x30\x49\x25\x2D\x5A\xA9\x58\x92\x49\x18\xCD\x8A\xA1\x05\x8C\xE7\xA6\xDE\x80\x5E\x3A\xD2\x93\x85\x7A\x52\x37\x81\xFA\xA8\x17\xAC\x3A\x00\xEC\x7C\xEB\xDC\x9F\x1D\xC6\x75\x99\x81\x9B\xB5\x54\x0C\x62\x57\xE2\x26\xCE\x06\xE6\x0C\x56\xA0\x9B\x30\xA2\x32\x2C\xC9\x24\x8C\x1E\xBA\xA9\xAA\xE8\x66\xBE\xFA\x6B\x56\x67\xBE\x3C\xD4\x93\x5E\xE9\xB5\x3B\xB6\x74\xE7\xF7\x0D\xD8\x35\x58\x1A\x03\x06\xB1\x2B\x75\xF3\x28\x07\x39\xB2\xC2\x30\x49\x52\x92\x49\x18\x3D\x18\x75\x3A\x8C\xEA\xA6\x82\xCF\x4F\xDA\xCC\x41\x3D\xA9\x9B\x7B\x39\x5E\xDC\xE9\x11\x4F\x44\x51\x1D\x6F\xCF\xCD\x15\x8F\xAD\x92\x5A\xDB\x0C\x62\x17\xEF\xBC\x7E\x72\x6C\x59\x81\xD6\xB0\x3C\x4B\x32\x09\xA3\xD3\x2B\xBD\x0D\xAD\x71\xCC\x84\xDA\x57\x6A\x3B\x07\xF5\xA4\x4F\x48\x22\x0D\x2E\xAE\x71\xE2\x24\x76\x31\xF2\x0D\x9C\x37\x37\x3C\x36\x17\xC0\x20\x76\xA9\xE8\x26\x8C\x18\xB0\x02\xAD\x59\xF7\x19\x6B\xD9\xB3\x24\x93\x30\xFA\x6F\xB9\x49\xFB\xDE\xF9\x54\x39\xA8\x27\x75\xF3\x24\x56\x7A\x12\xEA\xD2\xAA\xF1\x13\x80\x9E\x59\x4D\xB8\xA7\x17\x3C\x36\xD3\x2F\x19\xC4\xAE\xBE\x1A\xDD\x3C\xC8\x21\xA9\xE0\x56\xDF\xFA\x7B\x7A\x8D\x58\x92\x79\x19\xAD\x13\x09\xEE\x06\x57\x7A\x35\xA6\x9B\x3A\x03\x76\x6E\x2D\x03\xF5\xA4\x6E\xA2\x12\x73\x68\xE4\xA0\x27\xC5\x5E\xCE\x6D\x7C\x0C\x95\x53\x7C\xDE\xFC\x70\xE3\x66\xDD\x2F\x19\xC4\xAE\xC4\xCD\xAB\x5C\x93\x0A\xBE\xF0\x46\x9F\x37\xCD\x05\x88\x25\x99\x97\xD1\x46\x4C\x8D\x17\xA0\x9B\x4C\x30\x82\xA0\x72\x66\x66\xA1\x9E\xF4\xAD\x07\xF8\xF0\xE1\xB7\xE7\x56\x21\x51\xDC\x86\x55\x63\x10\xBB\xC8\x75\xB4\xFD\xD9\xFF\x61\x85\x4D\x28\xBC\x81\xEA\x7B\x52\xB2\x1C\xEE\x8F\xEB\xE2\x2A\x71\xD7\x28\x02\xEE\xBA\xC1\x6A\xF9\x20\xEA\xE9\xB6\xF7\x50\xCF\xF6\x16\xF5\x00\xFC\xDB\x8D\x78\x37\x75\x7B\x6E\xE5\x13\x75\x8C\x25\x60\x62\x50\xE8\xFA\xA2\x5C\xE7\x3D\x13\x7F\xC6\x67\x1F\x45\xCC\xA4\xAB\x1E\x5E\x7D\x29\xC0\x92\x3C\x9A\xB8\xA7\x2B\xAC\x02\x7C\x4A\xD8\xD7\xC3\x9A\x0C\xEA\xC9\xBF\x88\xB6\x5B\x3B\xB9\x74\x8F\x2A\x39\xC9\x37\x4C\xF1\xEA\x7A\x5E\x54\xB4\x5E\xE3\xD5\x2C\xE8\xD4\x53\xA0\x9E\xFC\x23\x5B\x77\x33\xA1\x53\x8B\xAC\x26\xCA\x85\xAC\x56\xFF\xF3\x69\x31\xE4\x42\xCF\x3F\xCB\xCE\x5A\x23\x71\x21\x52\x6D\x98\xC9\xDE\x4E\x33\x34\x22\x17\x22\x64\x29\xBA\x07\xB8\x50\x17\xCD\xAC\x84\x6E\xEA\xD8\xFB\xCE\xE5\xF1\x8F\x7F\x9A\xA9\xE4\x50\x18\x83\xEF\xC2\xB6\x2B\xE6\xAC\x5F\x73\xA1\xF2\xB1\x5C\xA8\x73\x66\xB6\x67\xB9\x71\xD3\x0F\x21\xE8\x6D\xB1\x09\x99\xEE\x31\x9A\xE8\xEB\xAC\xED\x1C\x8B\x0B\x75\xFE\xA9\xF9\x4A\x37\x7B\x12\x73\x8A\xF0\xE7\xDC\xE2\x87\x07\x37\x9B\x38\x04\x71\x42\xE4\x36\xF3\xB6\x73\x44\x2E\xF4\x11\xD6\xB1\xE8\xE6\x1B\x1C\xC5\x6A\x1F\x1D\x33\x20\xB8\xF1\x43\x74\x93\xDC\xE6\x7D\x31\x67\x45\x2E\x54\x66\x72\x21\xB5\x13\x74\x73\x05\x23\xED\x4E\x4C\x7C\x8B\x68\x08\x6E\xC2\x90\x8E\xB9\x85\xE7\x36\xD3\xFD\x48\xF8\xC4\x5C\xC8\xDB\x49\x3F\x56\x00\x7A\x0C\xEB\x4F\xCD\x2B\x08\x6E\xC2\x50\x43\x4B\x7B\x6E\x33\x7B\x37\x03\x17\xEA\xB2\xB9\x50\xFA\xC2\x01\xBA\x76\x8D\x57\x33\x5B\x40\x18\x6A\x03\x4F\x73\xDC\x66\x9A\x5F\x88\x79\x16\x2E\x94\xBA\x79\x07\x80\x57\xBA\x27\x0C\xE8\x15\x87\x2E\x9E\x00\x21\x72\x9B\x99\x3F\xFE\x8F\xC5\x85\x52\x37\xEF\xAC\x3F\x6D\x33\xA0\x2F\x04\x37\x61\xE8\x24\xAD\x73\x33\x72\x9B\x89\x7E\xFD\xED\xA9\xB9\x50\xEA\xE6\x57\x7C\x0B\xCC\xC5\xE9\x04\x82\x1B\x3F\x24\x51\xE4\x36\x36\xF7\x7C\xED\x1C\x8D\x0B\xD1\x4D\x3E\x6F\x06\xF2\xAF\x3A\x35\xF8\xE4\xC1\xCD\xF7\x30\x44\x37\xC9\x6D\x66\xED\xE6\xAF\xB8\x50\xF9\x27\x5C\x88\x9B\x33\xD5\x10\xC8\x74\x01\xDC\xF8\xA1\x21\x7F\x57\xFD\x03\xFF\x1D\xDC\x23\xB9\xD0\xB6\xBB\xC7\x85\xBA\x60\xA6\x1B\x89\x7A\x63\xA3\x83\xAB\xEE\x63\x79\xA9\xE0\x26\x0C\x0D\xDD\x0C\x99\xFE\xE9\x57\xBD\xBF\xE5\x42\x53\xFF\x66\xF7\xF4\xF4\x9B\x43\x9D\xFE\xBF\x3A\x98\x9E\xFE\xA3\x43\x5D\xB4\x68\xD1\xA2\x45\x8B\x16\x2D\xB2\x72\x9F\x4E\x36\x65\x51\x6C\x97\x56\x66\x4B\xCD\xC4\xA2\x71\x64\xED\x2C\xF9\xF3\x38\x4B\x2B\xB3\xB5\xBD\xFD\x31\x9E\xA5\x95\xD9\x42\xB1\xE5\xCF\xE3\x2C\xAD\xCC\x96\x4E\x9E\x58\x34\x8E\xCA\xE2\x27\x9A\xC6\xE3\xBC\xBD\x1F\xB4\x21\x00\x00\x00\x00\x49\x45\x4E\x44\xAE\x42\x60\x82'
local friskImage2Base85 = '\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x00\x00\x01\x4D\x00\x00\x00\x5A\x08\x03\x00\x00\x00\x0B\x8A\xF4\x61\x00\x00\x01\xDD\x50\x4C\x54\x45\x00\x00\x00\x00\x00\x00\x55\xFF\x55\xA1\x55\xE8\xAD\x61\xF4\x97\x50\xDA\x61\x33\x8C\x09\x1C\x1D\x42\x23\x5F\x89\x48\xC5\x2F\x9D\xA2\x04\x0E\x0E\xFF\xFF\xFF\x83\x45\xBD\x9D\x53\xE2\x4E\x29\x71\x7E\x42\xB5\x15\x45\x47\x19\x52\x55\x53\xF8\x53\x2F\x8C\x2F\xAE\x62\xF6\x33\x9A\x33\x50\xF0\x50\x3E\xCE\xD5\x32\xA2\xA2\x16\x47\x47\x3A\xBE\xC3\x48\xD9\x48\x1E\x61\x64\x1A\x55\x55\xA5\x59\xEC\x32\xA1\xA2\x8A\x3E\xD1\x99\x4D\xE0\x9D\x51\xE4\x29\x7C\x29\xA9\x5D\xF0\x42\xC7\x42\x45\xD0\x45\x94\x48\xDB\x70\x24\xB8\x8F\x43\xD6\x35\xAE\xB2\x11\x37\x38\x93\x4E\xD4\x5D\x10\xA4\x8E\x4B\xCD\x83\x39\xCA\x3C\xC2\xC3\x4B\xE1\x4B\x3B\xB2\x3B\x23\x68\x23\x36\xB0\xB2\x0D\x2A\x2A\x34\xA2\xA2\x3C\xBF\xC4\x77\x2A\xBE\x70\x3B\xA3\x58\x2F\x7F\x13\x01\x25\x40\xD0\xD5\x32\x9F\xA2\x28\x82\x83\x23\x74\x75\x38\xA7\x38\x0C\x26\x26\xAA\x5E\xF1\xD9\xD9\xD9\xD0\xD0\xD0\x76\x3F\xAC\x69\x38\x98\x51\x05\x98\x4E\xE9\x4E\x17\x01\x2D\xC4\x88\xFF\xF8\xF8\xF8\x90\x44\xD7\x7E\x33\xC5\x9A\x9A\x9A\x2D\x95\x99\x4B\x0B\x8F\x54\x3C\x82\x3F\x02\x7B\x1F\x64\x64\x2B\x35\x63\x33\x03\x63\x24\x3A\x5B\x28\x02\x4E\x2F\x5B\x3D\xB6\x8D\xFB\x93\x49\xD9\x6E\x34\xAD\x68\x32\xA5\x50\x06\x96\x2C\x8F\x92\x29\x84\x87\x3B\x03\x73\x23\x29\x54\x3F\xBD\x3F\x24\x43\x33\x1D\x48\x25\x1D\x5A\x21\x07\x17\x18\x15\x50\x13\x98\x50\xDE\x8D\x46\xD2\x67\x1B\xAE\x64\x3C\x9B\x40\x1E\x7F\x22\x70\x73\x29\x5B\x70\x31\x2F\x6D\x27\x37\x45\x28\x62\x2F\x0E\x03\x1B\x7E\xAC\xE9\x71\x93\xD9\x46\xCA\xD7\x39\xBB\xC3\x78\x39\xB9\x52\x89\xB7\x33\xA7\xAB\xA7\xA7\xA7\x5D\x34\x93\x5C\x3C\x8E\x57\x46\x84\x4C\x44\x73\x72\x72\x72\x44\x4A\x63\x3F\x3E\x61\x2D\x18\x60\x0C\x25\x26\x02\x08\x08\xBB\x72\xFF\x98\x87\xEF\x9F\x6E\xED\xE9\xE9\xE9\x59\xAE\xD1\xC7\xC7\xC7\x42\xB9\xC7\x55\x9B\xC4\xB2\xB2\xB2\x6A\x4E\x9D\x59\x38\x99\x8C\x8C\x8C\x30\x7B\x8A\x37\x52\x7E\x2F\x43\x6E\x41\x3C\x64\x1E\x4F\x5B\x3E\x5C\x57\x34\x48\x4B\x1F\x0B\x40\x2D\x4E\x3E\x2A\x51\x37\x12\x15\x2B\x0C\x29\x29\x1C\x6C\x19\x0A\x93\xFA\xBF\x00\x00\x00\x01\x74\x52\x4E\x53\x00\x40\xE6\xD8\x66\x00\x00\x0A\xB8\x49\x44\x41\x54\x78\xDA\xEC\x99\x87\xCF\x12\x31\x18\xC6\xFB\xD8\x22\x78\xE2\xE0\xF4\xD4\x04\x0D\x01\xC4\x80\xB8\x13\xBF\xB8\x35\x71\xEF\x15\xF7\x36\xEE\xBD\xF7\x36\xEE\xBD\x67\xFC\x5B\x7D\xDF\x96\xB6\xC0\xA9\xD1\x68\xC4\x8B\x3C\x5F\xBE\x5E\xC7\xD3\x83\xFE\x78\x3B\x38\x44\x87\x05\xD2\x8F\x1D\x63\xD0\xD0\xAA\x9F\xBB\xD9\x7F\x2C\x40\x4A\xE0\xC7\x8E\x4C\xBF\x94\x94\xA9\x7E\x19\xAC\xFA\x89\x9B\xFD\xD7\x38\x5B\x00\x8C\xE8\x0B\xE4\xF2\x22\x8D\x61\x42\xF4\x20\x2D\xC4\x30\xA4\x81\x81\xD2\xA8\xFF\x00\x9C\x37\x56\xC0\x9A\xCF\x73\x61\x47\x5F\xF4\x08\x11\xA4\xD1\xA5\xD9\x04\x00\x5E\xC3\x7C\xBA\x50\xCA\x05\x19\xA0\x77\x7F\x99\x02\xCB\xF8\xAC\x39\x0F\xA3\x9E\x10\xF8\x37\x68\x06\x69\xF4\x0D\x03\x31\x2C\xF7\x77\x73\xED\x34\x81\x81\xFD\xA5\xEC\x33\x00\x29\x49\xF4\xC6\x32\xBC\x0C\x25\x7D\xE4\x02\xB0\xA6\x8F\x9F\x6E\xCC\x3A\xB5\x66\x2E\x2C\xEC\x2F\xC7\x12\xEE\x94\x4C\x4D\xE7\x96\xCE\x0E\x29\x40\x67\x94\x6B\xA5\x19\xA2\x9F\x64\x8D\xA7\xEB\x42\x64\x28\x97\xA1\xB8\xEC\x87\xFE\x74\xBD\x24\xA0\xE5\x69\x3A\x33\x1A\x57\x02\xA9\x05\x74\x74\x48\x01\x7F\xAA\xFD\xFB\xF5\x46\xA6\xCF\x5F\xCE\xE5\x5A\x68\xF6\x25\x6E\xBD\x31\x40\x4A\xCD\x70\x1A\x81\x99\xC6\x5C\x4D\x3B\xDA\x69\x3A\x33\x28\x42\x81\x0C\xFA\x50\x27\xF2\xB3\xB9\x83\x43\xE2\xF1\x58\xFD\xE5\x1C\xDA\x67\x3A\x7A\x0F\x1C\xAB\x01\xA5\x30\x5E\x8E\xA7\xE9\x9B\x92\x0E\x20\xAB\x99\xA6\x37\xCB\x01\xA6\x2E\x43\x50\xF5\xCD\x3A\x38\x24\x91\x43\x9F\x0C\x06\x0C\xA4\x55\xA7\xF7\x5F\xCE\x05\x2D\x34\x03\xDE\x68\x58\xBC\x66\x52\xD4\x4D\x27\x4C\x04\x14\x29\xA2\x15\xA7\xE9\xCC\xA6\x7F\x73\x8B\xE8\xE0\x90\xF8\xB5\x3B\xA3\xC0\xAF\x9B\xAC\x34\x71\x1B\x38\x4D\x47\xD7\x40\x1D\x98\x63\x29\x1D\x08\xB7\x0B\xC1\xD1\x64\x8F\x31\xDB\x2A\x5E\x26\x7C\x6C\x76\x76\x48\xB9\x99\x22\x3F\x22\x8D\x74\x20\x72\xC3\x6C\xAE\xB5\x2E\x9E\xFB\xE5\x1E\xE7\xC4\x63\x97\x9B\x62\x72\xAD\x34\xCD\x9C\x9D\xA6\xE3\x8E\x17\x4D\xCE\xCA\xDE\xC0\x74\x73\x42\x9A\x3E\x90\x5B\x28\x4F\xCB\x93\x94\xD6\x6C\x69\xE6\x5A\xD6\x4D\xD1\xF2\x16\x7E\x67\x20\xBF\x9A\xEB\xB0\x00\xBF\x8C\x8E\xE7\x8B\x8E\x31\xBD\xA1\x67\x74\xE5\x7E\x77\x7A\x37\x81\xCA\x96\x66\xB3\xA1\x59\x27\xE8\xAC\x7F\xE0\xBC\xD9\x19\xC5\x69\xA2\x0F\x6D\x8D\x03\x38\xC6\x78\xA2\x83\xA7\x3A\xC6\x90\x63\x3A\x7F\xB3\x1C\x3B\x30\x83\x31\x40\x3F\x3E\x64\xB6\x98\x0D\xC0\x90\x37\xD6\xB1\xBD\xFF\x73\x9A\x02\x4E\x2E\x1B\x8E\x71\xC5\x31\xE4\xD8\x0F\x96\x29\xC4\xCD\x80\x3D\xAE\x6A\xFD\xDF\x30\x1D\x20\xB3\x79\xF4\x0D\xF3\x08\xF9\xB1\x51\x0F\x15\x7B\x88\x1F\xAB\x1E\xA6\x81\x9E\x11\x33\x1B\xD0\x72\xF9\x16\x33\xE0\xBE\xD1\xF5\x04\xFF\x3B\xCC\xAE\xBA\xEA\xAA\xAB\x64\xEA\x4C\xF8\x19\x48\x87\x67\x74\x21\x18\x07\xE0\x44\xD0\xB4\x45\xF4\x1C\x13\x38\x6D\x9C\x33\x70\x57\x88\x8B\xB7\x81\x19\x6F\x67\xDA\x07\xB7\xEE\xCA\x8A\xB0\x9A\xD2\x15\xEB\xB1\xFE\x58\xF3\x16\xB3\x08\x75\xD1\xA6\x25\xE0\x34\x58\x0B\x6C\x24\xAB\xBB\x8F\x57\x42\xF7\x94\xDD\x68\xA8\xA4\x79\x19\xCD\x30\x30\xBC\x2C\xDE\xB3\xD6\xB1\x4A\xF8\x6A\x3B\xF2\x3A\x80\xED\x02\xED\x5A\x04\x20\x12\x4E\xBE\xCF\x2E\x18\xF9\xBA\xA4\xFF\xCA\x03\x1C\xA8\x16\x94\x2A\x54\x0F\x68\x40\xDB\x4A\x4A\xA9\xD2\x36\x90\x94\x8A\x14\x49\x16\xA1\x2A\x00\x3B\x2B\xEA\x16\x70\xB5\xAC\x54\xA5\x3A\x4E\x1B\x4C\x75\xC4\x57\x52\x84\xEB\xAA\x0C\xA0\x58\x50\x85\x22\x37\x1B\x01\x65\x55\x6B\xC1\x59\xE7\x5B\x01\x6B\xF1\x4E\xAA\xA8\xD0\xCF\x7E\x28\xD9\xAC\xCE\xD9\x42\x02\x71\x02\xA3\x23\xA5\x55\x39\x0C\x60\xB9\x32\x1A\x0D\x20\x8A\x94\x51\xB1\xA8\xAA\x38\x7D\x1A\x55\x55\x24\x7B\xC3\xBD\xCF\xD1\x34\x57\xD2\x12\xC2\x36\x15\x90\xA6\x53\x13\xCD\xA9\x04\x79\x86\x70\x8A\x80\x12\x57\xE3\x99\x31\x1C\xC2\x08\x07\x10\x39\x7D\x9C\x4C\x26\xCD\x1D\x98\xA6\xA2\xE2\x5E\x1A\x70\x45\x15\x80\x2B\x4C\x01\x28\x2A\xB5\x86\x69\x82\x55\xA5\x86\x82\xDA\x46\x8D\xEC\xB8\xA9\x1D\x35\x19\xC9\x18\xCD\xA5\x18\xC7\x8E\x15\xAA\xBC\x47\xF3\x63\x51\xCF\x0B\x3A\x1D\x87\xA5\x1E\xE6\x26\x02\x1E\x81\xB9\x6F\x01\xD6\x70\x77\x4F\x13\x39\x82\x99\x50\x9A\x1B\x50\xD2\xFC\x08\x50\xF9\x14\x93\x33\x85\x09\xAA\x6A\x20\x01\xFA\x5A\x53\x05\x46\x52\x63\x47\x09\xA4\xC3\xE5\x9A\x35\x38\x9A\x45\xEA\xB6\x1C\x28\x13\x39\xD6\x76\x80\x23\x79\x02\x76\x3D\xD7\x97\xD9\x7E\x3A\xA8\xE8\x82\xE9\x4B\x4E\xEA\x54\xC0\x07\x4B\x73\x65\x76\x1E\x80\x79\xD9\x95\x89\xA4\xB9\x04\x15\xB5\xD7\xFF\xF4\x52\x88\x32\xD8\xCC\x03\x63\x7A\x8D\x01\x57\x95\x24\x2A\x3C\xDD\x47\xB3\x83\xE6\x72\x20\x56\x00\x88\xD1\x1C\x87\x12\x35\xA2\x52\xA1\x75\x93\x60\x1F\xB7\xC1\x2A\x2E\x52\xA8\x96\x70\x54\x34\xB4\x0B\x72\x93\xE9\x03\x80\x17\xE1\x4F\xC8\xBB\xD8\x5C\x96\x05\x65\x96\x25\x33\x36\x61\x87\xE5\xB9\xB8\x5A\x65\x35\x95\x29\x56\x2A\x85\x26\xC7\xBD\x45\x91\x37\x34\xEA\xD6\xEB\x09\x0D\x15\x29\x56\x0D\xF7\x6B\x58\x4E\x31\x59\x14\x9B\x35\xD5\xF5\xC2\x6A\x6D\xD3\x0E\x56\x20\x9A\x9B\x50\x77\x34\xE7\x67\x2F\xE3\x72\x76\x7E\x92\x69\x02\x11\x49\x7D\x8B\x66\x34\x77\xF4\x38\x4C\x78\x82\x6D\x4A\x6D\xC5\x2C\xE7\xA8\x33\xCD\x48\x59\xF9\x5E\x9C\x54\x79\x41\x28\xF3\x54\x9F\xAB\x4E\x9A\x58\x37\x16\x8F\xD3\x54\x2C\x5A\x02\xB6\x4A\xDC\xB6\x34\x79\xAA\xF3\x44\x4F\x26\xCD\x8D\x28\xA8\x37\x96\xA6\x1B\xBD\x9F\xE9\x2B\xE6\x2A\xE9\xB7\x1A\xBD\x30\x1C\x41\x20\x5E\xB5\xCC\xF4\x76\x9A\xAE\xED\x88\xEE\xDC\x4E\xD3\x55\x6C\xF7\xDD\x2D\x4D\x9E\xEA\x37\xB2\xCB\x12\xBA\x0B\x9D\x40\x29\x2A\x42\x8B\x69\x96\xDC\x2E\x54\xE2\x29\xAB\x81\x70\xD6\xF2\x38\x4A\x8E\x2A\x48\xA7\xCA\x5F\xBE\x47\xB3\xEC\x68\xF2\x6A\x8B\x15\xAE\xC5\xD1\xF1\xD6\xCA\x9E\x18\xCD\xF9\x59\xFA\xD3\x34\x93\x77\x80\xAF\xA3\xA6\x54\x71\x1C\x50\x5B\xCE\x34\x6B\x91\x9A\x60\x4E\x48\x76\xCB\xE6\xFC\x56\x04\xA6\x44\x76\x73\x42\x3A\x45\xFB\x4C\xEC\x84\xB4\x16\x52\xDD\xD2\x9F\xC4\x5E\xE2\x58\xD2\x60\xAF\x22\xE2\xA3\xD3\x1E\x25\xC1\x6A\xA3\x59\x52\x07\x81\x2D\x64\xDD\xE0\x69\xBE\xC8\x66\x69\xA2\x73\x21\x81\xCF\x7F\x37\xE2\x90\x8A\xF4\xC6\x11\x8D\xE6\x68\x72\xA7\x77\xB7\x3F\x49\x55\xF1\x01\x38\x03\x55\xC5\x5E\x7D\xD6\x8F\x5A\x68\x72\x9C\x13\x78\x7B\x7A\x5F\x03\x60\xAE\x69\x90\xD8\xAA\x4A\x86\x4F\x2B\xCD\x7D\x15\x76\x56\x3E\xFA\x3D\x9D\xF4\x80\x27\x3A\x17\x92\x38\xDB\x81\xEB\x5B\x0A\x4A\xC9\xE5\x7B\xB0\x9A\x0A\xD7\xF4\x37\xCB\x6B\x80\x99\xE9\x22\x8F\xF7\x2A\x4A\xC1\x9C\xE5\xB5\x7D\x41\x39\x8A\xE6\x6E\xD9\x8B\x58\x6C\xBE\xA4\xB0\x1C\x0D\x7D\x26\x8D\xE4\x1A\x4C\x75\x0D\xC7\x71\x88\x42\x3E\x4E\x73\x27\xF6\xA5\xE8\xC5\xF6\x61\xA7\x70\x34\x47\xE0\x11\x4D\xF4\x30\xA9\x34\x29\x3A\x1B\x5A\x1D\x7F\xEA\x41\x35\x79\x90\xD6\x99\x12\x0B\xDF\x7D\xEA\xB1\x14\x07\xF4\xF1\x12\x5A\xC7\x7D\x03\x50\x50\x07\x00\x38\x36\xB6\x69\x27\xB4\x76\x36\xD7\x8D\x00\x10\x0A\x91\xD8\x5F\x7A\xEA\x21\x01\x5D\x6F\x7E\x7A\x11\xC1\x3A\x86\x17\x34\x3D\x13\xCB\x53\xD9\x96\x58\x3B\x4E\x02\x7D\xC3\xF6\x27\x72\xF6\x7B\x7A\x0D\x93\xC5\x6B\x60\xD7\x64\xDF\x70\x16\x9B\x78\x7D\xC4\xD3\x79\xF6\x04\xEF\x9A\xF2\x39\x20\x97\x6F\xAD\x1B\x81\xD0\x14\x12\xFB\x54\xEE\xCF\x68\x32\xD6\xA8\x32\x16\xC5\x1F\xF9\x1D\x8C\x36\x01\xEB\xE6\xDD\xC0\x43\xD1\xD5\x4F\xAB\x6E\xD6\x8B\x38\x4E\xA0\x2E\x36\x6C\xC0\x14\xD1\xD5\xAF\xE0\x34\x30\xE3\x38\xEB\x94\x6E\xC8\x8B\xAE\xBA\xFA\x57\xF4\x37\xB6\x92\xF4\x64\x31\x39\x2D\xFE\x03\xFD\x8D\x63\x4E\x7A\x0E\x80\x39\xFF\x01\x4E\xA0\x57\x2F\xF3\xEF\xEB\xFE\x3C\xCC\xA1\x83\x31\x78\xE8\xBF\x82\x13\x70\xE9\xAC\x34\xD2\xB3\x62\x11\x35\xA2\x2F\xC6\x4C\x31\x57\xE4\x26\x36\x37\x03\xDC\x23\x60\x93\xCD\x00\x3E\x69\xA2\xE9\x5F\xA4\x3D\xD7\x28\xE5\xD1\x97\x32\x7D\xED\xAE\x0F\xAD\x9E\xC9\xFE\x4D\x19\xBB\x4F\x02\xF7\x82\x23\x87\xF6\x1A\x3A\xF2\x1F\x39\x2E\x80\xD4\x48\x43\xB0\x42\x38\x39\x03\x90\xB7\x10\xF3\x88\x29\x14\xB6\xAB\x36\xB5\x25\xFE\x66\xF1\x5C\x33\x3A\x63\x37\x54\x60\x35\xF9\x7B\x77\xF6\xD5\xFF\xD2\x97\x26\x1B\x3A\x3A\x1D\x42\x9F\xF2\x10\xCE\x1B\x01\xDA\x30\x6A\x50\xAF\x49\x23\xA1\xAF\xBD\x86\x8F\xF4\xCD\x9C\x33\x3D\xC2\xD0\x76\xA5\xAA\xE6\xA4\xA5\x9A\xD3\xF6\x9C\x7B\x0B\x23\x7B\x0D\x02\x30\xA8\x97\x0E\x32\xFB\x1A\x8B\x07\xE3\xCE\x4F\xDD\x79\x48\xAF\x5E\xFF\x04\xCE\xAF\xED\x5D\xB1\x72\xE2\x30\x10\xF5\xDB\x86\x82\x0E\x79\xCC\xC0\x38\x19\x17\x1E\xBB\x49\x63\xC3\x0D\xDD\x5D\x92\x2E\x7D\xFA\x2B\x52\xDC\x8F\xE4\x37\xEE\x5F\x0F\x59\xD6\x5A\x96\xEC\x44\x4C\x98\x43\x04\xBD\x99\x84\xF5\x2E\xDA\x78\x5F\x24\x59\xE2\x01\x36\xCB\x4B\x49\x22\x1D\xB1\x79\x87\x4A\x9A\x6B\xA0\x26\x89\x76\xCC\xA6\x6A\xC1\x4D\xAD\x9A\xD9\x3D\xC3\xA6\x52\x28\x95\x55\x51\x75\xFC\x79\xC3\x83\x3A\x29\x05\xE1\x99\x59\x04\xC8\x66\x4E\x29\x52\xCA\x01\x63\xAE\x5B\x42\x50\xBA\x97\x65\x09\xCA\x50\xDA\x7C\xD4\x92\xE5\x9C\x9B\xDA\x35\xB3\x7B\x9E\x4D\xFE\x6B\x6B\xDA\xD1\x8B\xD1\x5B\x25\x63\xC2\x2F\x73\x4E\x01\xB1\xA9\x20\xF9\x92\x10\x5C\x5F\x22\xB1\x3C\x1A\x6A\x4C\x21\xAB\x5E\x6C\x3E\xF6\xC0\xDE\x68\x6A\xD7\x3C\xB8\x7B\xB8\x56\x0E\xE6\x8E\xD4\x38\x1F\x4E\x4A\x3C\xF9\x64\x46\x46\x79\x80\x6C\xB2\x31\x5A\xD5\x74\x47\xC7\xB2\x32\x55\xC0\x5C\x3F\x33\x83\x44\x8E\x7B\xDE\xAA\x75\x1E\xA1\xBB\xE6\x70\x52\x4F\x3E\x99\x21\x04\x02\x62\xD3\x1E\x7A\x89\xC9\xE6\x02\x40\x37\xD2\xD7\x54\xED\xF6\x93\x7D\x53\x70\x53\xAB\x66\x76\xCF\x8F\xF4\x94\xAD\x5D\xC7\xDE\x6F\xE3\xA4\x32\x5A\xFB\x64\xCE\x29\x03\x51\x10\x97\xF5\xF1\xBC\x59\x77\x15\x2C\x0C\x36\x17\x58\x53\xDA\x4F\x97\x25\x76\x36\x1F\xAD\x9A\x37\xB9\xA9\x55\x33\xBB\x3D\xD8\x14\x54\x91\xB0\xE6\x4D\xF2\xC9\xAC\x66\xCF\x20\x56\x49\xEE\x35\x3D\x43\x61\xB0\xF9\x88\xB7\x7E\x76\x6B\xE5\xA3\xA0\xFD\x88\x0F\x21\x9D\xE5\xD0\x14\x64\x82\xDD\xF3\xB3\x03\x73\x51\x53\x8D\x9C\x2A\xFC\x35\x47\x7A\xEB\x93\x59\x74\xF9\x82\x90\x3D\xEC\xF5\xA6\xD8\xE1\x79\x34\xD2\x81\xAA\xAB\x58\x76\x07\x51\x97\x54\x8F\xF8\x28\xD7\x72\x51\xF8\xB8\xEA\x9B\xDA\x35\xB3\x7B\x9E\xCD\x5A\x1D\xA5\xBC\xDE\x6C\x06\x36\xDB\x12\x7F\x3E\xCF\x9C\x85\xC3\xA6\xBB\x17\x7A\x67\xA7\x82\xBD\x7F\xE1\x23\x1E\x5F\x8F\x7A\x2F\xF4\xCC\x4F\xE2\x28\xBB\x9D\xBD\x10\xE3\xA3\xBD\x50\xF3\x71\xE6\xF7\xCE\x5D\x04\x24\x22\x01\xFC\xBB\x58\x60\xF9\x4B\x3B\x19\x77\xC0\x56\x3E\x6E\xB1\x5C\x35\xFC\x19\x1D\xAE\x4A\x6E\xA6\x87\xA6\x56\xCD\x3F\xD9\x3D\xB5\x4F\x97\x58\xA9\xA3\x1F\xFD\x3E\xBD\x31\xFF\x85\x0F\xCD\x7C\xE6\xC1\x5D\x7C\x0B\x11\x49\x55\x75\xFE\x2F\xD4\xB9\xD1\xAF\xEA\xF9\xA4\xAA\x33\x97\x7C\xFD\x1F\x30\xB8\xC9\xAA\x22\xAE\x19\xD7\x3F\xE7\x07\x84\x70\xD6\x23\xDF\x00\x00\x11\x42\x79\x9D\x21\x34\x8C\xD7\x9B\x8B\xC2\xE9\x7B\xAF\x4B\x3C\x34\x83\x54\x63\xB0\xA9\x43\x49\xEC\xAC\xA7\xE9\x42\x8D\x21\xD5\x68\x4B\x87\x92\xA0\xB4\x99\x0B\xC2\x5F\x17\x72\xA5\x9A\x95\x0E\xA9\x58\x28\xAF\x7F\x5F\x00\xDE\xBA\xD0\x2B\xEB\x42\xAE\x54\xD3\x87\x22\x9B\x27\xEB\x42\x53\x52\x0D\x87\x64\x2C\x5E\x97\x4E\xD0\x85\x26\xA5\x1A\x1D\x2A\x49\x44\x36\x4F\xD1\x85\x26\xA5\x1A\x1D\x4A\xA9\x8D\x6C\x9E\xA6\x0B\xB9\x52\x0D\x87\x76\x54\xF5\x29\x6E\x7C\x8B\xE4\xAF\x0B\xB9\x52\x0D\x87\x5A\x4A\xBB\x14\x37\xBF\x4C\xF2\xD7\x85\x5C\xA9\x46\x87\xA8\x47\x28\x72\xC2\xC5\xE0\xAF\x0B\xB9\x52\xCD\x73\x1F\x8A\x6C\x4E\xEE\x85\xEE\x95\x04\x33\xAD\x0B\x41\xA3\x19\x9E\x37\x92\x69\x82\x91\x61\x2F\x01\x7F\x5D\xE8\x15\xD8\x4E\x48\x35\x3A\xC4\x2C\x86\xF2\x16\x81\xEB\x06\x8E\xF8\xBE\x72\xCD\x7F\x07\x10\x85\x8D\x88\x88\x88\x88\x88\x88\x88\x88\x88\x19\x6C\x16\x58\xDE\x6F\x92\x64\x6B\x58\x85\xB4\x0E\xEC\x2B\xA4\x75\x18\x47\x0B\xB6\x36\x63\xEB\x60\xE7\x73\xAD\x82\xAD\x83\xED\x73\xF3\x6D\xC6\x99\x8B\x99\x28\xE7\xF3\x3F\x83\x62\x2E\xF3\xC1\x6A\xE1\x99\xEF\x88\x02\x11\xE7\xC1\x91\xCE\xCD\x70\x7B\x9C\x68\x7D\xD1\xDA\x9A\x37\xE3\x89\xD6\x17\x2D\x24\xDB\xE1\xF6\x38\xD1\xFA\xA2\x25\xA7\x51\x44\x9C\x07\x87\xE4\x1F\xAB\xDB\x58\x28\x18\x8B\xF1\x7A\x00\x00\x00\x00\x49\x45\x4E\x44\xAE\x42\x60\x82'

local config = {
  colors = {
    brand = 'A155E8',
  },
  enabled = true,
  settings = {
    frisk = {
      showDialog = new.bool(false),
      printToChat = new.bool(true),
      style = 1,
      mode = new.int(1),
      keys = { 90 },
    },

    putcop = {
      mode = new.int(1),
      keys = { 88 },
    },

    cuff = {
      auto = new.bool(false),
      afterFrisk = new.bool(true),
      keys = { 18, 67 },
    },

    tazer = {
      active = new.bool(true),
      keys = { 20 },
    },

    megaphone = {
      stopTextOnKey = new.bool(true),
      afterFrisk = new.bool(true),
      keys = { 20 },
      stopTextArray = {
        new.char[108]("** Остановитесь! Простая проверка. Неподчинение - 3 звезды. **"),
      },
      friskText = new.char[108]("** Спасибо за сотрудничество. Можете быть свободны **"),
    }
  }
}

local errors = {}

local inputState = {
  frisk = false,
}

function hex2rgb(hex)
  hex = hex:gsub('#','')
  return tonumber('0x'..hex:sub(1,2)), tonumber('0x'..hex:sub(3,4)), tonumber('0x'..hex:sub(5,6))
end

function dec2hex(decimal)
  return string.format('%06x', bit.band(decimal, 0xFFFFFF))
end

function main()
  while not isSampAvailable() do wait(100) end

  chatMessage(cyr 'Скрипт загружен')
  chatMessage(cyr 'Активация: {' .. config.colors.brand .. '} /lawguard')

  sampRegisterChatCommand('lawguard', function()
    renderWindow[0] = not renderWindow[0]
  end)

  wait(-1)
end

local brandColors = {}
brandColors.r, brandColors.g, brandColors.b = hex2rgb(config.colors.brand)
local function loadCustomStyle()
  local r, g, b = brandColors.r, brandColors.g, brandColors.b
  imgui.SwitchContext()
  local ImVec4                                            = imgui.ImVec4
  imgui.GetStyle().WindowPadding                          = imgui.ImVec2(8, 8)
  imgui.GetStyle().FramePadding                           = imgui.ImVec2(6, 4)
  imgui.GetStyle().ItemSpacing                            = imgui.ImVec2(8, 8)
  imgui.GetStyle().ItemInnerSpacing                       = imgui.ImVec2(10, 10)
  imgui.GetStyle().TouchExtraPadding                      = imgui.ImVec2(0, 0)
  imgui.GetStyle().IndentSpacing                          = 0
  imgui.GetStyle().ScrollbarSize                          = 5
  imgui.GetStyle().GrabMinSize                            = 5
  imgui.GetStyle().WindowBorderSize                       = 1
  imgui.GetStyle().ChildBorderSize                        = 1
  imgui.GetStyle().PopupBorderSize                        = 1
  imgui.GetStyle().FrameBorderSize                        = 1
  imgui.GetStyle().TabBorderSize                          = 1
  imgui.GetStyle().WindowRounding                         = 8
  imgui.GetStyle().ChildRounding                          = 8
  imgui.GetStyle().FrameRounding                          = 6
  imgui.GetStyle().PopupRounding                          = 8
  imgui.GetStyle().ScrollbarRounding                      = 8
  imgui.GetStyle().GrabRounding                           = 8
  imgui.GetStyle().TabRounding                            = 8

  imgui.GetStyle().Colors[imgui.Col.Text]                 = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TextDisabled]         = ImVec4(0.50, 0.50, 0.50, 1.00)
  imgui.GetStyle().Colors[imgui.Col.WindowBg]             = ImVec4(0.06, 0.06, 0.06, 0.94)
  imgui.GetStyle().Colors[imgui.Col.ChildBg]              = ImVec4(1.00, 1.00, 1.00, 0.00)
  imgui.GetStyle().Colors[imgui.Col.PopupBg]              = ImVec4(0.08, 0.08, 0.08, 0.94)
  imgui.GetStyle().Colors[imgui.Col.Border]               = ImVec4(0.43, 0.43, 0.50, 0.00)
  imgui.GetStyle().Colors[imgui.Col.BorderShadow]         = ImVec4(0.00, 0.00, 0.00, 0.00)
  imgui.GetStyle().Colors[imgui.Col.FrameBg]              = ImVec4(r / 255, g / 255, b / 255, 0.40)
  imgui.GetStyle().Colors[imgui.Col.FrameBgHovered]       = ImVec4(r / 255, g / 255, b / 255, 0.60)
  imgui.GetStyle().Colors[imgui.Col.FrameBgActive]        = ImVec4(r / 255, g / 255, b / 255, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TitleBg]              = ImVec4(0.04, 0.04, 0.04, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TitleBgActive]        = ImVec4(0.48, 0.16, 0.16, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TitleBgCollapsed]     = ImVec4(0.00, 0.00, 0.00, 0.51)
  imgui.GetStyle().Colors[imgui.Col.MenuBarBg]            = ImVec4(0.14, 0.14, 0.14, 1.00)
  imgui.GetStyle().Colors[imgui.Col.ScrollbarBg]          = ImVec4(0.02, 0.02, 0.02, 0.53)
  imgui.GetStyle().Colors[imgui.Col.ScrollbarGrab]        = ImVec4(0.31, 0.31, 0.31, 1.00)
  imgui.GetStyle().Colors[imgui.Col.ScrollbarGrabHovered] = ImVec4(0.41, 0.41, 0.41, 1.00)
  imgui.GetStyle().Colors[imgui.Col.ScrollbarGrabActive]  = ImVec4(0.51, 0.51, 0.51, 1.00)
  imgui.GetStyle().Colors[imgui.Col.CheckMark]            = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.SliderGrab]           = ImVec4(0.88, 0.26, 0.24, 1.00)
  imgui.GetStyle().Colors[imgui.Col.SliderGrabActive]     = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.Button]               = ImVec4(r / 255, g / 255, b / 255, 0.1)
  imgui.GetStyle().Colors[imgui.Col.ButtonHovered]        = ImVec4(r / 255, g / 255, b / 255, 1.00)
  imgui.GetStyle().Colors[imgui.Col.ButtonActive]         = ImVec4(r / 255, g / 255, b / 255, 1.00)
  imgui.GetStyle().Colors[imgui.Col.Header]               = ImVec4(0.98, 0.26, 0.26, 0.31)
  imgui.GetStyle().Colors[imgui.Col.HeaderHovered]        = ImVec4(0.98, 0.26, 0.26, 0.80)
  imgui.GetStyle().Colors[imgui.Col.HeaderActive]         = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.Separator]            = ImVec4(0.43, 0.43, 0.50, 0.50)
  imgui.GetStyle().Colors[imgui.Col.SeparatorHovered]     = ImVec4(0.75, 0.10, 0.10, 0.78)
  imgui.GetStyle().Colors[imgui.Col.SeparatorActive]      = ImVec4(0.75, 0.10, 0.10, 1.00)
  imgui.GetStyle().Colors[imgui.Col.ResizeGrip]           = ImVec4(0.98, 0.26, 0.26, 0.25)
  imgui.GetStyle().Colors[imgui.Col.ResizeGripHovered]    = ImVec4(0.98, 0.26, 0.26, 0.67)
  imgui.GetStyle().Colors[imgui.Col.ResizeGripActive]     = ImVec4(0.98, 0.26, 0.26, 0.95)
  imgui.GetStyle().Colors[imgui.Col.Tab]                  = ImVec4(0.98, 0.26, 0.26, 0.40)
  imgui.GetStyle().Colors[imgui.Col.TabHovered]           = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TabActive]            = ImVec4(0.98, 0.06, 0.06, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TabUnfocused]         = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TabUnfocusedActive]   = ImVec4(1.00, 1.00, 1.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.PlotLines]            = ImVec4(0.61, 0.61, 0.61, 1.00)
  imgui.GetStyle().Colors[imgui.Col.PlotLinesHovered]     = ImVec4(1.00, 0.43, 0.35, 1.00)
  imgui.GetStyle().Colors[imgui.Col.PlotHistogram]        = ImVec4(0.90, 0.70, 0.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.PlotHistogramHovered] = ImVec4(1.00, 0.60, 0.00, 1.00)
  imgui.GetStyle().Colors[imgui.Col.TextSelectedBg]       = ImVec4(0.98, 0.26, 0.26, 0.35)
end

local FONT_MEDIUM, FONT_BIG = nil, nil
local friskImage1, friskImage2 = nil, nil
imgui.OnInitialize(function()
  imgui.GetIO().IniFilename = nil
  local config = imgui.ImFontConfig()
  config.MergeMode = true

  local path = getFolderPath(0x14) .. '\\trebucbd.ttf'
  local glyph_ranges = imgui.GetIO().Fonts:GetGlyphRangesCyrillic()

  imgui.GetIO().Fonts:Clear()
  imgui.GetIO().Fonts:AddFontFromFileTTF(path, 15.0, nil, glyph_ranges)

  -- icons
  local iconRanges = imgui.new.ImWchar[3](icons.min_range, icons.max_range, 0)
  icon = imgui.GetIO().Fonts:AddFontFromMemoryCompressedBase85TTF(icons.base85, 18, config, iconRanges)

  -- Additional fonts:
  FONT_MEDIUM = imgui.GetIO().Fonts:AddFontFromFileTTF(path, 24.0, _, glyph_ranges)
  FONT_BIG = imgui.GetIO().Fonts:AddFontFromFileTTF(path, 42.0, _, glyph_ranges)

  friskImage1 = imgui.CreateTextureFromFileInMemory(imgui.new('const char*', friskImage1Base85), #friskImage1Base85)
  friskImage2 = imgui.CreateTextureFromFileInMemory(imgui.new('const char*', friskImage2Base85), #friskImage2Base85)

  loadCustomStyle()
end)

local function settingsFriskSection()
  local r, g, b = brandColors.r, brandColors.g, brandColors.b
  local cfg = config.settings.frisk
  imgui.Heading('Обыск игрока')
  if imgui.RadioButtonIntPtr('Биндер'..'##justfrisk', cfg.mode, 1) then
    -- sampUnregisterChatCommand('frisk')

  end
  imgui.SameLine()
  imgui.HelpMarker('При нажатии на кнопку - вылазит команда /frisk с ручным вводом id преступника')
  if imgui.RadioButtonIntPtr('Полуавтоматический'..'##semiautofrisk', cfg.mode, 2) then
    sampRegisterChatCommand('frisk', function()
      local Id = sampGetClosestPlayerId(10)
      if Id then
        sampSendChat('/frisk '..Id)
      else
        sampAddChatMessage(('{C0C0C0}ForCops{FFD700} | {FFFFFF}Игрок слишком далеко.{FFD700}'), 0xFFFFFF)
      end
    end)
  end
  imgui.SameLine()
  imgui.HelpMarker('Для обыска ближайшего игрока нужно ввести команду /frisk')
  if imgui.RadioButtonIntPtr('Автоматический'..'##autofrisk', cfg.mode,3) then
    -- sampUnregisterChatCommand('frisk')
  end
  if cfg.mode[0] == 1 or cfg.mode[0] == 3 then
    if imgui.HotKey('##friskkeys', cfg.keys, 100, 'Активация') then
      print(table.concat(cfg.keys, ', '))
    end
  end

  imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
  imgui.Heading('Диалоговое окно обыска')

  if imgui.Checkbox('Вывод серверного диалогового окна /frisk', cfg.showDialog) then
    if not cfg.showDialog[0] and not cfg.printToChat[0] then
      cfg.showDialog[0] = true
      print('error')
      errors.dialog = 'Должен быть выбран минимум один из методов отображения обыска'
    else
      errors.dialog = nil
    end
  end

  if imgui.Checkbox('Вывод информации в чат', cfg.printToChat) then
    if not cfg.showDialog[0] and not cfg.printToChat[0] then
      cfg.printToChat[0] = true
      print('error')
      errors.dialog = 'Должен быть выбран минимум один из методов отображения обыска'
    else
      errors.dialog = nil
    end
  end

  if errors.dialog then
    imgui.TextColored(imgui.ImVec4(0.99, 0, 0, 1), errors.dialog)
  end

  if cfg.printToChat[0] then
    imgui.SetCursorPosY(imgui.GetCursorPosY() + 10)
    imgui.Heading('Выберите режим отображения')
    local imageWidth = imgui.GetContentRegionMax().x / 2 - imgui.GetStyle().ItemSpacing.x
    local imageSize = imgui.ImVec2(imageWidth, imageWidth * 1 / 2.5)
    local firstImageBgCol, secondImageBgCol = imgui.ImVec4(0, 0, 0, 0), imgui.ImVec4(0, 0, 0, 0)
    if (cfg.style == 1) then
      firstImageBgCol = imgui.ImVec4(r / 255, g / 255, b / 255, 1.00)
    else
      secondImageBgCol = imgui.ImVec4(r / 255, g / 255, b / 255, 1.00)
    end
    if imgui.ImageButton(friskImage1, imageSize, imgui.ImVec2(0, 0), imgui.ImVec2(1, 1), 0, firstImageBgCol) then
      cfg.style = 1
      friskMessage(1, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), checkForbiddenStuff('Нарко, Материалы'), 1)
    end
    imgui.SameLine()
    if imgui.ImageButton(friskImage2, imageSize, imgui.ImVec2(0, 0), imgui.ImVec2(1, 1), 0, secondImageBgCol) then
      cfg.style = 2
      friskMessage(2, select(2, sampGetPlayerIdByCharHandle(PLAYER_PED)), {}, 0)
    end
  end
end

local function settingsPutcopSection()
  local cfg = config.settings.putcop
  imgui.Heading('Посадить игрока в машину')
  if imgui.RadioButtonIntPtr('Биндер'..'##justputcop', cfg.mode, 1) then
    -- sampUnregisterChatCommand('putcop')

  end
  imgui.SameLine()
  imgui.HelpMarker('При нажатии на кнопку - вылазит команда /putcop с ручным вводом id преступника')
  if imgui.RadioButtonIntPtr('Полуавтоматический'..'##semiautofrisk', cfg.mode, 2) then
    sampRegisterChatCommand("putcop", function()
      local Id = sampGetClosestPlayerId(4)
      if Id then
        sampSendChat("/putcop "..Id)
      else
        sampAddChatMessage(("{C0C0C0}ForCops{FFD700} | {FFFFFF}Игрок слишком далеко.{FFD700}"), 0xFFFFFF)
      end
    end)
  end
  imgui.SameLine()
  imgui.HelpMarker('Нужно ввести команду /putcop чтобы посадить в машину ближайшего игрока')
  if imgui.RadioButtonIntPtr('Автоматический'..'##autofrisk', cfg.mode, 3) then
    -- sampUnregisterChatCommand('putcop')
  end

  if cfg.mode[0] == 1 or cfg.mode[0] == 3 then
    if imgui.HotKey('##putcopkeys', cfg.keys, 100, 'Активация') then
      print(table.concat(cfg.keys, ', '))
    end
  end
end

local function settingsCuffSection()
  local cfg = config.settings.cuff
  imgui.Heading('Наручники')

  if imgui.Checkbox('Автоматически', cfg.auto) then
  end
  imgui.SameLine()
  imgui.HelpMarker('При нажатии на клавишу ближайший игрок будет закован в наручники')

  if imgui.Checkbox('После обыска', cfg.afterFrisk) then
  end
  imgui.SameLine()
  imgui.HelpMarker('После обыска если есть звёзды - игрок будет закован в наручники')
  if imgui.HotKey('##active', cfg.keys, 100, 'Активация:') then
    print(table.concat(cfg.keys, ', '))
  end
end

local function settingsTazerSection()
  local cfg = config.settings.tazer
  imgui.Heading('Тазер')

  if imgui.Checkbox('Активация по клавише', cfg.active) then
  end
  if imgui.HotKey('##tazerkeys', cfg.keys, 100, 'Активация') then
    print(table.concat(cfg.keys, ', '))
  end
end

local function settingsMegaphoneSection()
  local cfg = config.settings.megaphone
  imgui.Heading('Мегафон')
  if imgui.Checkbox('Клавиша для просьбы об остановке', cfg.stopTextOnKey) then
  end

  for i = 1, #cfg.stopTextArray do
    local inputWidth = imgui.GetContentRegionAvail().x
    local deleteButtonText = icons('fa_trash')
    local deleteButtonSize = imgui.CalcButtonSizeFromText(deleteButtonText)
    if i > 1 then
      inputWidth = imgui.GetContentRegionAvail().x - deleteButtonSize.x - imgui.GetStyle().ItemSpacing.x
    end
    imgui.SetNextItemWidth(inputWidth)
    imgui.InputText('##stopText'..i, cfg.stopTextArray[i], ffi.sizeof(cfg.stopTextArray[i]))
    if (i > 1) then
      imgui.SameLine()
      if imgui.ColoredButton(deleteButtonText..'##'..i, deleteButtonSize, 0.5, 0, 0) then
        table.remove(cfg.stopTextArray, i)
        break
      end
    end
  end
  if #cfg.stopTextArray < 3 then
      if imgui.Button(icons('fa_plus') .. ' Добавить строчку', imgui.ImVec2(imgui.GetContentRegionAvail().x, 0)) then
      cfg.stopTextArray[#cfg.stopTextArray+1] = new.char[108]()
    end
  end
  if imgui.Checkbox('Сообщение после обыска', cfg.afterFrisk) then
  end
  imgui.SetNextItemWidth(imgui.GetContentRegionAvail().x)
  imgui.InputText('##friskText', cfg.friskText, ffi.sizeof(cfg.friskText))
end

local settingsSections = {
  settingsFriskSection,
  settingsPutcopSection,
  settingsCuffSection,
  settingsTazerSection,
  settingsMegaphoneSection,
}
local settingsSection = 1
local function settingsPage()
  local friskButtonText = '/frisk'
  local putcopButtonText = '/putcop'
  local cuffButtonText = '/cuff'
  local tazerButtonText = '/tazer'
  local megaphoneButtonText = '/m'
  imgui.BeginChild('##settings-items',
    imgui.ImVec2(-1, imgui.CalcButtonSizeFromText(friskButtonText).y + imgui.GetStyle().WindowPadding.y * 2), true,
    imgui.WindowFlags.NoScrollWithMouse + imgui.WindowFlags.NoScrollbar)

  if imgui.Button(friskButtonText, imgui.CalcButtonAutoWidthSize(friskButtonText, 5)) then
    settingsSection = 1
  end
  imgui.SameLine()
  if imgui.Button(putcopButtonText, imgui.CalcButtonAutoWidthSize(putcopButtonText, 4)) then
    settingsSection = 2
  end
  imgui.SameLine()
  if imgui.Button(cuffButtonText, imgui.CalcButtonAutoWidthSize(cuffButtonText, 3)) then
    settingsSection = 3
  end
  imgui.SameLine()
  if imgui.Button(tazerButtonText, imgui.CalcButtonAutoWidthSize(tazerButtonText, 2)) then
    settingsSection = 4
  end
  imgui.SameLine()
  if imgui.Button(megaphoneButtonText, imgui.CalcButtonAutoWidthSize(megaphoneButtonText, 1)) then
    settingsSection = 5
  end

  imgui.EndChild()

  imgui.BeginChild('##settings-content', imgui.ImVec2(-1, 0), true)
  settingsSections[settingsSection]()
  imgui.EndChild()
end

local function starsPage()
  imgui.BeginChild('##stars', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end

local function automationPage()
  imgui.BeginChild('##automation', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end

local function screensPage()
  imgui.BeginChild('##screens', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end

local function graphicsPage()
  imgui.BeginChild('##graphics', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end

local function autobuyPage()
  imgui.BeginChild('##autobuy', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end

local function partnersPage()
  imgui.BeginChild('##partners', imgui.ImVec2(-1, -1), true)
  imgui.EndChild()
end


local function bugReportSection()
  local bugReportText = 'Bug report:'

  local telegramText = icons('fae_telegram') .. ' Telegram'
  local telegramButtonSize = imgui.CalcButtonSizeFromText(telegramText)

  local githubText = icons('fa_github') .. ' GitHub'
  local githubButtonSize = imgui.CalcButtonSizeFromText(telegramText)

  local maxButtonSize = math.max(telegramButtonSize.x, githubButtonSize.x) + 20
  imgui.SetCursorPosX(imgui.GetContentRegionAvail().x / 3 - maxButtonSize - imgui.GetStyle().ItemSpacing.x * 2)
  imgui.BeginGroup()

  imgui.PushFont(FONT_MEDIUM)
  local bugReportTextSize = imgui.CalcTextSize(bugReportText)
  imgui.SetCursorPosX(imgui.GetCursorPosX() + maxButtonSize + imgui.GetStyle().ItemSpacing.x - bugReportTextSize.x / 2)
  imgui.Text(bugReportText)
  imgui.PopFont()


  if imgui.Button(telegramText, imgui.ImVec2(maxButtonSize, imgui.CalcTextSize(telegramText).y + 20)) then
    os.execute('explorer "https://t.me/pozhit_ok"')
  end
  imgui.SameLine()
  if imgui.Button(githubText, imgui.ImVec2(maxButtonSize, imgui.CalcTextSize(githubText).y + 20)) then
    os.execute('explorer "https://github.com/pozhitok-egor/ForCops.lua/issues"')
  end
  imgui.EndGroup()
end

local function donateSection()
  local donateText = ' Поддержать автора'
  imgui.PushFont(FONT_MEDIUM)
  local donateTextSize = imgui.CalcTextSize(donateText).x
  imgui.PopFont()

  imgui.SetCursorPosX(imgui.GetWindowContentRegionWidth() / 3 + donateTextSize / 2 + imgui.GetStyle().ItemSpacing.x)
  imgui.BeginGroup()
  imgui.PushFont(FONT_MEDIUM)
  imgui.Text(donateText)
  imgui.PopFont()


  local coffeeIcon = icons('fa_paypal')

  imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(0, 0.4, 0.8, 0.8))
  imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(0, 0.4, 0.8, 1))
  imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(0, 0, 0.8, 1))
  if imgui.Button(coffeeIcon, imgui.ImVec2(donateTextSize, imgui.CalcTextSize(coffeeIcon).y + 20)) then
    os.execute('explorer "https://www.paypal.com/donate?hosted_button_id=TM8YEMRAWZHG2" ')
  end
  imgui.PopStyleColor(3)
  imgui.EndGroup()
end

local function scriptCommandsSection()
  imgui.BeginGroup()
  imgui.Text('Команды:')
  imgui.Text('/kpz [штраф] - посадить через /arrest')
  imgui.Text('/p+ id id ... - добавить напарника')
  imgui.Text('/p- id id ... - удалить напарника')
  imgui.Text('Информация:')
  imgui.Text('У игрока со звёздами отображается сядет он или нет (дистанция).')
  imgui.Text('Посмотрите настройки и настройте всё под себя. <3')
  imgui.EndGroup()
end

local function infoPage()
  imgui.BeginChild('##info', imgui.ImVec2(-1, -1), true)
  local scriptInfoText = thisScript().name:upper() .. ' v' .. thisScript().version
  imgui.PushFont(FONT_BIG)
  local scriptInfoTextSize = imgui.CalcTextSize(scriptInfoText)
  imgui.SetCursorPosY(50)
  imgui.SetCursorPosX(imgui.GetWindowContentRegionWidth() / 2 - scriptInfoTextSize.x / 2)
  imgui.Text(scriptInfoText)
  imgui.PopFont()

  local scriptAuthorText = 'Made by ' .. thisScript().authors[1]

  imgui.PushFont(FONT_MEDIUM)
  local scriptAuthorTextSize = imgui.CalcTextSize(scriptAuthorText)
  imgui.SetCursorPosX(imgui.GetWindowContentRegionWidth() / 2 - scriptAuthorTextSize.x / 2)
  imgui.Text(scriptAuthorText)
  imgui.PopFont()

  imgui.SetCursorPosY(imgui.GetCursorPosY() + 20)
  bugReportSection()
  imgui.SameLine()
  donateSection()

  imgui.SetCursorPosY(math.max(imgui.GetCursorPosY(),
    imgui.GetWindowContentRegionMax().y - (imgui.CalcTextSize('/').y * 7 + imgui.GetStyle().ItemSpacing.x * 6)))
  scriptCommandsSection()
  imgui.EndChild()
end

local pages = {
  settingsPage,
  starsPage,
  automationPage,
  screensPage,
  graphicsPage,
  autobuyPage,
  partnersPage,
  infoPage,
}
local page = 8
local newFrame = imgui.OnFrame(
  function() return renderWindow[0] end,
  function(player)
    local r, g, b = brandColors.r, brandColors.g, brandColors.b
    imgui.PushStyleColor(imgui.Col.WindowBg, imgui.ImVec4(0, 0, 0, 0))

      imgui.SetNextWindowPos(imgui.ImVec2(resX * 0.5, resY * 0.5), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
      imgui.SetNextWindowSize(imgui.ImVec2(resX * 0.4, resY * 0.5))

      imgui.Begin('###', renderWindow, imgui.WindowFlags.NoTitleBar + imgui.WindowFlags.NoResize + imgui.WindowFlags.AlwaysAutoResize)

        imgui.PushStyleColor(imgui.Col.ChildBg, imgui.ImVec4(0, 0, 0, 0.9))

          imgui.BeginChild('buttons', imgui.ImVec2(imgui.GetWindowContentRegionWidth() * 0.3, -1), true, imgui.WindowFlags.NoScrollbar + imgui.WindowFlags.NoScrollWithMouse + imgui.WindowFlags.AlwaysAutoResize)

            if not config.enabled then
              local btn_size = imgui.ImVec2(-0.1, math.max(imgui.CalcTextSize('В').y, imgui.GetContentRegionAvail().y * 0.12))

              if imgui.ColoredButton(icons('fa_toggle_off') .. '  Включить', btn_size, 0, 0.5, 0) then
                config.enabled = true
              end
            else
              local btn_size = imgui.ImVec2(-0.1, math.max(imgui.CalcTextSize('В').y, imgui.GetContentRegionAvail().y * 0.12))

              if imgui.ColoredButton(icons('fa_toggle_on') .. '  Выключить', btn_size, 0.5, 0, 0) then
                config.enabled = false
              end
            end

            local btn_size = imgui.ImVec2(-0.1, (imgui.GetContentRegionAvail().y + imgui.GetStyle().ItemSpacing.y) / 8 - imgui.GetStyle().ItemSpacing.y)
            if imgui.Button(icons('fa_code') .. ' Команды', btn_size) then page = 1 end
            if imgui.Button(icons('fa_star') .. ' Звёзды', btn_size) then page = 2 end
            if imgui.Button(icons('weather_stars') .. ' Автоматизация', btn_size) then page = 3 end
            if imgui.Button(icons('fa_camera') .. '  Скриншоты', btn_size) then page = 4 end
            if imgui.Button(icons('fa_photo') .. '  Графика', btn_size) then page = 5 end
            if imgui.Button(icons('weather_stars') .. ' Автопокупка', btn_size) then page = 6 end
            if imgui.Button(icons('oct_people') .. ' Напарники', btn_size) then page = 7 end
            if imgui.Button(icons('seti_info') .. ' Информация', btn_size) then page = 8 end

          imgui.EndChild()
        imgui.PopStyleColor()

        imgui.SameLine()

        imgui.BeginChild('##2', imgui.ImVec2(-1, -1), false)
          imgui.PushStyleColor(imgui.Col.ChildBg, imgui.ImVec4(0, 0, 0, 0.9))
            imgui.PushStyleVarVec2(imgui.StyleVar.WindowPadding, imgui.ImVec2(10, 10))
              pages[page]()
            imgui.PopStyleVar()
          imgui.PopStyleColor()
        imgui.EndChild()
      imgui.End()
    imgui.PopStyleColor()
  end
)

function imgui.ColoredButton(label, size, r, g, b)
  r, g, b = r or 0, g or 0, b or 0
  local isButtonPressed = false
  imgui.PushStyleColor(imgui.Col.Button, imgui.ImVec4(r, g, b, 0.5))
  imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.ImVec4(r, g, b, 1))
  imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.ImVec4(r, g, b, 1))
  if imgui.Button(label, size) then isButtonPressed = true end
  imgui.PopStyleColor(3)
  return isButtonPressed
end

function imgui.CalcButtonSizeFromText(text)
  local textSize = imgui.CalcTextSize(text)
  textSize.x = textSize.x + imgui.GetStyle().FramePadding.x * 2
  textSize.y = textSize.y + imgui.GetStyle().FramePadding.y * 2
  return textSize
end

function imgui.CalcButtonAutoWidthSize(buttonText, buttonsRemaining, height)
  local minButtonWidth = imgui.CalcButtonSizeFromText(buttonText).x
  return imgui.ImVec2(math.max(imgui.GetContentRegionAvail().x / buttonsRemaining, minButtonWidth), height or 0)
end

function imgui.HelpMarker(desc)
  imgui.Text(icons('fa_question_circle'))
  if imgui.IsItemHovered() then
      imgui.BeginTooltip()
      imgui.PushTextWrapPos(imgui.GetFontSize() * 35.0)
      imgui.TextUnformatted(desc)
      imgui.PopTextWrapPos()
      imgui.EndTooltip()
  end
end

function chatMessage(message)
  sampAddChatMessage('{'.. config.colors.brand ..'}' .. thisScript().name .. '{'.. config.colors.brand ..'} | {ffffff}' .. message, 0xC0C0C0)
end

function sampGetClosestPlayerId(radius)
	local mX, mY, mZ = getCharCoordinates(PLAYER_PED)
	local result, newPed = findAllRandomCharsInSphere(mX, mY, mZ, radius, true, false)
	local _, closestId = sampGetPlayerIdByCharHandle(newPed)
	if closestId == -1 then
		result, newPed = findAllRandomCharsInSphere(mX, mY, mZ, radius, true, false)
		_, closestId = sampGetPlayerIdByCharHandle(newPed)
	end
	if partners then
		for i,v in pairs(partners) do
			if tonumber(v) == tonumber(closestId) then
				result, newPed = findAllRandomCharsInSphere(mX, mY, mZ, radius, true, false)
				_, closestId = sampGetPlayerIdByCharHandle(newPed)
			end
		end
	end
	if closestId ~= -1 then
		return select(2, sampGetPlayerIdByCharHandle(newPed))
	else
	return false
	end
end

function friskMessage(style, playerId, items, stars)
  local itemsText = #items > 1 and '{ff5555}' .. table.concat(items, '{ffffff}, {ff5555}') or '{55ff55}нет запрещённых вещей{ffffff}.'
  local starsText = stars > 0 and '{ff5555}' .. stars .. ' ' .. declension(stars, {'звезда', 'звезды', 'звёзд'}) .. '{ffffff}.' or '{55ff55}нет звёзд{ffffff}.'

  local nick, score, playerColor = sampGetPlayerNickname(playerId), sampGetPlayerScore(playerId), sampGetPlayerColor(playerId)

  local styleTemplates = {
      [1] = {
          cyr '{ffffff}Обыск игрока {' .. dec2hex(playerColor) .. '}' .. nick .. ' (' .. playerId .. '){ffffff},{' .. dec2hex(playerColor) .. '} ' .. score .. '{ffffff} lvl.',
          cyr '{ffffff}У игрока ' .. cyrillicToLower(itemsText),
          cyr '{ffffff}У игрока ' .. cyrillicToLower(starsText),
      },
      [2] = {
          '{' .. dec2hex(playerColor) .. '}' .. nick .. ' (' .. playerId .. '){ffffff},{' .. dec2hex(playerColor) .. '} ' .. score .. '{ffffff} lvl.',
          itemsText,
          starsText,
      }
  }

  local brandColor = config.colors.brand
  local linedScriptName = '~~~~~~~~~~~~ {' .. brandColor .. '}' .. thisScript().name .. ' ~~~~~~~~~~~~'
  sampAddChatMessage(linedScriptName, tonumber(brandColor, 16))

  for i = 1, #styleTemplates[style] do
      sampAddChatMessage(styleTemplates[style][i], tonumber(brandColor, 16))
  end

  sampAddChatMessage(string.rep('~', #linedScriptName:gsub('{[A-Fa-f0-9]+}', '') - 1), tonumber(brandColor, 16))
end

function checkForbiddenStuff(text)
  local items = {}
  if string.find(text, 'Нарко') then items[#items + 1] = 'Наркотики' end
  if string.find(text, 'Материалы') then items[#items + 1] = 'Материалы' end
  if string.find(text, 'Отмычка') then items[#items + 1] = 'Отмычка' end
  if string.find(text, 'Динамит') then items[#items + 1] = 'Динамит' end
  return items
end

function declension(n, titles)
    return titles[(n % 10 == 1 and n % 100 ~= 11) and 1 or (n % 10 >= 2 and n % 10 <= 4 and (n % 100 < 10 or n % 100 >= 20) and 2 or 3)]
end

local tBlockKeys = {[vkeys.VK_RETURN] = true, [vkeys.VK_T] = true, [vkeys.VK_F6] = true, [vkeys.VK_F8] = true}
local tBlockChar = {[116] = true, [84] = true}
local tModKeys = {[vkeys.VK_MENU] = true, [vkeys.VK_SHIFT] = true, [vkeys.VK_CONTROL] = true}
local tBlockNextDown = {}

local tHotKeyData = {
    edit = nil,
	save = {},
   lastTick = os.clock(),
   tickState = false
}
local tKeys = {}

imgui.HotKey = function(name, keys, width, label)
  local width = width or 90
  local name = tostring(name)
  local bool = false

  local sKeys = table.concat(getKeysName(keys), ' + ')

  if #tHotKeyData.save > 0 and tostring(tHotKeyData.save[1]) == name then

    clearTable(keys)
    for i, v in ipairs(tHotKeyData.save[2]) do
      keys[i] = v
    end
      sKeys = table.concat(getKeysName(keys), ' + ')
      tHotKeyData.save = {}
      bool = true
  elseif tHotKeyData.edit ~= nil and tostring(tHotKeyData.edit) == name then
  if #tKeys == 0 then
    if os.clock() - tHotKeyData.lastTick > 0.5 then
          tHotKeyData.lastTick = os.clock()
          tHotKeyData.tickState = not tHotKeyData.tickState
       end
       sKeys = tHotKeyData.tickState and 'No keys' or ' '
      else
          sKeys = table.concat(getKeysName(tKeys), ' + ')
      end
  end

  imgui.PushStyleColor(imgui.Col.Button, imgui.GetStyle().Colors[imgui.Col.FrameBg])
  imgui.PushStyleColor(imgui.Col.ButtonHovered, imgui.GetStyle().Colors[imgui.Col.FrameBgHovered])
  imgui.PushStyleColor(imgui.Col.ButtonActive, imgui.GetStyle().Colors[imgui.Col.FrameBgActive])
  if label then
    imgui.SetCursorPosY(imgui.GetCursorPosY() + imgui.GetStyle().FramePadding.y)
    imgui.Text(label)
    imgui.SameLine()
    imgui.SetCursorPosY(imgui.GetCursorPosY() - imgui.GetStyle().FramePadding.y)
  end
  if imgui.Button((tostring(sKeys):len() == 0 and 'No keys' or sKeys) .. name, imgui.ImVec2(width, 0)) then
      tHotKeyData.edit = name
  end
  imgui.PopStyleColor(3)
  return bool
end

function clearTable(t)
  for i = 1, #t do
    t[i] = nil
  end
end

function getCurrentEdit()
  return tHotKeyData.edit ~= nil
end

function getKeysList(bool)
  local bool = bool or false
  local tKeysList = {}
  if bool then
    for k, v in ipairs(tKeys) do
        tKeysList[k] = vkeys.id_to_name(v)
    end
  else
    tKeysList = tKeys
  end
  return tKeysList
end

function getKeysName(keys)
  if type(keys) ~= 'table' then
      return false
  else
      local tKeysName = {}
      for k, v in ipairs(keys) do
        tKeysName[k] = vkeys.id_to_name(v)
      end
      return tKeysName
  end
end


local function getKeyNumber(id)
  for k, v in ipairs(tKeys) do
     if v == id then
        return k
     end
  end
  return -1
end

local function reloadKeysList()
   local tNewKeys = {}
   for k, v in pairs(tKeys) do
      tNewKeys[#tNewKeys + 1] = v
   end
   tKeys = tNewKeys
   return true
end

function isKeyModified(id)
  if type(id) ~= 'number' then
     return false
  end
  return (tModKeys[id] or false) or (tBlockKeys[id] or false)
  end

  addEventHandler('onWindowMessage', function (msg, wparam, lparam)
      if tHotKeyData.edit ~= nil and msg == wm.WM_CHAR then
          if tBlockChar[wparam] then
              consumeWindowMessage(true, true)
          end
      end
      if msg == wm.WM_KEYDOWN or msg == wm.WM_SYSKEYDOWN then
          if (wparam == vkeys.VK_ESCAPE and renderWindow[0]) then
            renderWindow[0] = false
            consumeWindowMessage(true, true)
          end
          if tHotKeyData.edit ~= nil and wparam == vkeys.VK_ESCAPE then
              tKeys = {}
              tHotKeyData.edit = nil
              consumeWindowMessage(true, true)
          end
          if tHotKeyData.edit ~= nil and wparam == vkeys.VK_BACK then
              tHotKeyData.save = {tHotKeyData.edit, {}}
              tHotKeyData.edit = nil
              consumeWindowMessage(true, true)
          end
          local num = getKeyNumber(wparam)
          if num == -1 then
              tKeys[#tKeys + 1] = wparam
              if tHotKeyData.edit ~= nil then
                  if not isKeyModified(wparam) then
                      tHotKeyData.save = {tHotKeyData.edit, tKeys}
                      tHotKeyData.edit = nil
                      tKeys = {}
                      consumeWindowMessage(true, true)
                  end
              end
          end
          reloadKeysList()
          if tHotKeyData.edit ~= nil then
              consumeWindowMessage(true, true)
          end
      elseif msg == wm.WM_KEYUP or msg == wm.WM_SYSKEYUP then
          local num = getKeyNumber(wparam)
          if num > -1 then
              tKeys[num] = nil
          end
          reloadKeysList()
          if tHotKeyData.edit ~= nil then
              consumeWindowMessage(true, true)
          end
      end
  end)

function imgui.Heading(text)
  imgui.PushFont(FONT_MEDIUM)
  imgui.Text(text)
  imgui.PopFont()
end

function cyrillicToLower(inputString)
  return inputString:gsub('[%z\1-\127\194-\244][\128-\191]*', function(char)
      if char:match('[%u\192-\239]') then
          return char:lower()
      else
          return char
      end
  end)
end